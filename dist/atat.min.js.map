{"version":3,"sources":["webpack://atat/webpack/universalModuleDefinition","webpack://atat/webpack/bootstrap","webpack://atat/./src/helpers.ts","webpack://atat/./src/common.ts","webpack://atat/./src/atat.ts","webpack://atat/./src/regexp.ts","webpack://atat/./src/options.ts","webpack://atat/./src/inline.ts","webpack://atat/./src/context.ts","webpack://atat/./src/tags.ts","webpack://atat/./src/compiler.ts","webpack://atat/./src/load_file.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","common_1","loop","array","fn","toString","length","x","encode_html","code","replace","MATCH_HTML","HTML_RULES","trim_string","str","chars","_i","arguments","String","trim","indexOf","charAt","substring","json_stringify","obj","JSON","stringify","join_helper","separator","Array","join","uppercase_helper","toUpperCase","lowercase_helper","toLowerCase","helpers","encode","json","upper","lower","merge","src","dest","get_tags","tags","regexps","compiler","regexp","push","compilers","RegExp","open","close","get_tags_inline","inline_tags","loop_async","callback","ready","finished","results","cb","index","err","res","escape_quotes","resolveUrl","base","relative","stack","split","parts","pop","noop","VALUE_NAME_OUTSIDE","VALUE_NAME_INSIDE","&","<",">","\"","'","/","CLEAR_TAGS","context_1","options_1","compiler_1","load_file_1","helpers_1","atat","config","opts","AtatDefaultOpions","parse","input","options","Promise","resolve","reject","result","ctx","AtatContext","AtatCompiler","compile","output","render","Function","template","model","body","layout","context","e","loadAndParse","path","load_file","content","loadAndRender","__express","regexp_exec","pos","lastIndex","match","exec","global","clean_array","splice","match_recursive","left","right","outerStart","innerStart","leftMatch","rightMatch","sticky","openTokens","delimStart","delimEnd","lastOuterEnd","Error","slice","start","end","regexp_test","test","match_inline","innerEnd","lastEnd","leftStart","it","$","basepath","cache","atat_1","(@section\\()([^]*?)(\\)@)","inside","name_1","(@layout\\()([^]*?)(\\)@)","parent","(@partial\\()([^]*?)(\\)@)","args_1","uri","shift","partials","(@\\()([^]*?)(\\)@)","val","(@!\\()([^]*?)(\\)@)","output_call_helper","name_2","regexp_1","inline_1","tags_1","_this","this","inline","sections","section","item","@\\{","@if\\s*\\(","blocks","block","@while\\s*\\(","out","@for\\s*\\(","@function\\s+[$A-Za-z0-9]*\\s*\\(","@section\\s+[$A-Za-z0-9]*\\s*\\{","compile_inline","request","XMLHttpRequest","onreadystatechange","readyState","status","responseText","send"],"mappings":"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","file":"atat.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"atat\"] = factory();\n\telse\n\t\troot[\"atat\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar common_1 = require(\"./common\");\r\nexports.helpers = {\r\n    encode: encode_html,\r\n    json: json_stringify,\r\n    join: join_helper,\r\n    upper: uppercase_helper,\r\n    lower: lowercase_helper\r\n};\r\nfunction merge(src, dest) {\r\n    if (dest === void 0) { dest = {}; }\r\n    for (var x in src) {\r\n        if (!dest.hasOwnProperty(x) && src.hasOwnProperty(x)) {\r\n            if (typeof src[x] == 'object') {\r\n                dest[x] = merge(src[x]);\r\n            }\r\n            else {\r\n                dest[x] = src[x];\r\n            }\r\n        }\r\n    }\r\n    return dest;\r\n}\r\nexports.merge = merge;\r\nfunction get_tags(tags) {\r\n    var regexps = [];\r\n    loop(tags, function (compiler, regexp) {\r\n        if (regexps.indexOf(regexp) === -1) {\r\n            regexps.push(regexp);\r\n        }\r\n    });\r\n    var compilers = [];\r\n    loop(tags, function (compiler, regexp) {\r\n        compilers.push({\r\n            compiler: compiler,\r\n            regexp: new RegExp(regexp, 'g')\r\n        });\r\n    });\r\n    return {\r\n        open: new RegExp(regexps.join('|'), 'g'),\r\n        close: /}@/g,\r\n        compilers: compilers\r\n    };\r\n}\r\nexports.get_tags = get_tags;\r\nfunction get_tags_inline(inline_tags) {\r\n    var regexps = [];\r\n    loop(inline_tags, function (compiler, regexp) {\r\n        regexps.push(regexp);\r\n    });\r\n    regexps.push('(@[A-Za-z0-9$]+\\\\()([^]*?)(\\\\)@)');\r\n    return new RegExp(regexps.join('|'), 'g');\r\n}\r\nexports.get_tags_inline = get_tags_inline;\r\nfunction loop(array, fn) {\r\n    if (Object.prototype.toString.call(array) !== '[object Array]') {\r\n        array = array;\r\n        for (var x in array) {\r\n            if (array.hasOwnProperty(x)) {\r\n                fn(array[x], x, array);\r\n            }\r\n        }\r\n        return;\r\n    }\r\n    array = array;\r\n    for (var i = 0, l = array.length; i < l; i++) {\r\n        fn(array[i], i, array);\r\n    }\r\n}\r\nexports.loop = loop;\r\nfunction loop_async(array, fn, callback) {\r\n    var ready = 0, finished = false, results = [], length = array.length;\r\n    for (var i = 0; i < length; i++) {\r\n        fn(array[i], i, array, cb(i));\r\n    }\r\n    function cb(index) {\r\n        return function (err, res) {\r\n            if (finished) {\r\n                return;\r\n            }\r\n            if (err) {\r\n                finished = true;\r\n                callback(err);\r\n                return;\r\n            }\r\n            results[index] = res;\r\n            ready++;\r\n            if (ready == length) {\r\n                finished = true;\r\n                callback(null, results);\r\n            }\r\n        };\r\n    }\r\n}\r\nexports.loop_async = loop_async;\r\nfunction encode_html(code) {\r\n    if (code === void 0) { code = ''; }\r\n    return code.toString().replace(common_1.MATCH_HTML, function (m) {\r\n        return common_1.HTML_RULES[m] || m;\r\n    });\r\n}\r\nexports.encode_html = encode_html;\r\nfunction trim_string(str) {\r\n    var chars = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        chars[_i - 1] = arguments[_i];\r\n    }\r\n    if (chars.length == 0) {\r\n        return String.prototype.trim.call(str);\r\n    }\r\n    while (chars.indexOf(str.charAt(0)) >= 0) {\r\n        str = str.substring(1);\r\n    }\r\n    while (chars.indexOf(str.charAt(str.length - 1)) >= 0) {\r\n        str = str.substring(0, str.length - 1);\r\n    }\r\n    return str;\r\n}\r\nexports.trim_string = trim_string;\r\nfunction escape_quotes(str) {\r\n    return trim_string(str).replace(/^\"(.*)\"$/g, '$1').replace(/^'(.*)'$/g, '$1');\r\n}\r\nexports.escape_quotes = escape_quotes;\r\nfunction json_stringify(obj) {\r\n    return JSON.stringify(obj);\r\n}\r\nexports.json_stringify = json_stringify;\r\nfunction join_helper(array, separator) {\r\n    if (array === void 0) { array = []; }\r\n    if (separator === void 0) { separator = ''; }\r\n    return Array.prototype.join.call(array, separator);\r\n}\r\nexports.join_helper = join_helper;\r\nfunction uppercase_helper(str) {\r\n    if (str === void 0) { str = ''; }\r\n    return str.toString().toUpperCase();\r\n}\r\nexports.uppercase_helper = uppercase_helper;\r\nfunction lowercase_helper(str) {\r\n    if (str === void 0) { str = ''; }\r\n    return str.toString().toLowerCase();\r\n}\r\nexports.lowercase_helper = lowercase_helper;\r\nfunction resolveUrl(base, relative) {\r\n    var stack = base.split(\"/\"), parts = relative.split(\"/\");\r\n    stack.pop();\r\n    for (var i = 0; i < parts.length; i++) {\r\n        if (parts[i] == \".\") {\r\n            continue;\r\n        }\r\n        if (parts[i] == \"..\") {\r\n            stack.pop();\r\n        }\r\n        else {\r\n            stack.push(parts[i]);\r\n        }\r\n    }\r\n    return stack.join(\"/\");\r\n}\r\nexports.resolveUrl = resolveUrl;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction noop() { }\r\nexports.noop = noop;\r\nexports.VALUE_NAME_OUTSIDE = 'outside';\r\nexports.VALUE_NAME_INSIDE = 'inside';\r\nexports.HTML_RULES = { '&': '&#38;', '<': '&#60;', '>': '&#62;', '\"': '&#34;', \"'\": '&#39;', '/': '&#47;' };\r\nexports.CLEAR_TAGS = /[-[\\](){}*+?.,\\\\^$|#\\s]/g;\r\nexports.MATCH_HTML = /&(?!#?\\w+;)|<|>|\"|'|\\//g;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar context_1 = require(\"./context\");\r\nvar options_1 = require(\"./options\");\r\nvar compiler_1 = require(\"./compiler\");\r\nvar common_1 = require(\"./common\");\r\nvar load_file_1 = require(\"./load_file\");\r\nvar helpers_1 = require(\"./helpers\");\r\nexports.atat = {\r\n    config: function (opts) {\r\n        opts = helpers_1.merge(options_1.AtatDefaultOpions, opts);\r\n        for (var x in opts) {\r\n            if (options_1.AtatDefaultOpions.hasOwnProperty(x)) {\r\n                options_1.AtatDefaultOpions[x] = opts[x];\r\n            }\r\n        }\r\n    },\r\n    parse: function (input, options, callback) {\r\n        if (options === void 0) { options = {}; }\r\n        if (callback === void 0) { callback = common_1.noop; }\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = {};\r\n        }\r\n        if (callback === common_1.noop && typeof (Promise) !== 'undefined') {\r\n            return new Promise(function (resolve, reject) {\r\n                exports.atat.parse(input, options, function (err, result) {\r\n                    err ? reject(err) : resolve(result);\r\n                });\r\n            });\r\n        }\r\n        var ctx = new context_1.AtatContext(options);\r\n        var compiler = new compiler_1.AtatCompiler();\r\n        compiler.compile(input, ctx, function (err, output) {\r\n            if (err) {\r\n                return callback(err);\r\n            }\r\n            var render = new Function(ctx.arguments, output + ';return this.output;');\r\n            ctx.template = function (model) {\r\n                try {\r\n                    ctx.output = '';\r\n                    ctx.model = model || ctx.model;\r\n                    var body = render.call(ctx, ctx.model, ctx.helpers, ctx.body);\r\n                    if (ctx.layout) {\r\n                        ctx.layout.context.body = body;\r\n                        body = ctx.layout(ctx.model);\r\n                    }\r\n                    return body;\r\n                }\r\n                catch (e) {\r\n                    return e.toString();\r\n                }\r\n            };\r\n            ctx.template.context = ctx;\r\n            callback(null, ctx.template);\r\n        });\r\n    },\r\n    loadAndParse: function (path, options, callback) {\r\n        if (options === void 0) { options = {}; }\r\n        if (callback === void 0) { callback = common_1.noop; }\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = {};\r\n        }\r\n        if (callback === common_1.noop && typeof (Promise) !== 'undefined') {\r\n            return new Promise(function (resolve, reject) {\r\n                exports.atat.loadAndParse(path, options, function (err, result) {\r\n                    err ? reject(err) : resolve(result);\r\n                });\r\n            });\r\n        }\r\n        load_file_1.load_file(path, function (err, content) {\r\n            err ? callback(err) : exports.atat.parse(content, options, callback);\r\n        });\r\n    },\r\n    render: function (input, model, options, callback) {\r\n        if (model === void 0) { model = {}; }\r\n        if (options === void 0) { options = {}; }\r\n        if (callback === void 0) { callback = common_1.noop; }\r\n        if (typeof (options) === 'function') {\r\n            callback = options;\r\n            options = {};\r\n        }\r\n        if (callback === common_1.noop && typeof (Promise) !== 'undefined') {\r\n            return new Promise(function (resolve, reject) {\r\n                exports.atat.render(input, model, options, function (err, result) {\r\n                    err ? reject(err) : resolve(result);\r\n                });\r\n            });\r\n        }\r\n        exports.atat.parse(input, options, function (err, render) {\r\n            err ? callback(err) : callback(null, render(model));\r\n        });\r\n    },\r\n    loadAndRender: function (path, model, options, callback) {\r\n        if (options === void 0) { options = {}; }\r\n        if (callback === void 0) { callback = common_1.noop; }\r\n        if (typeof (options) === 'function') {\r\n            callback = options;\r\n            options = {};\r\n        }\r\n        if (callback === common_1.noop && typeof (Promise) !== 'undefined') {\r\n            return new Promise(function (resolve, reject) {\r\n                exports.atat.loadAndRender(path, model, options, function (err, result) {\r\n                    err ? reject(err) : resolve(result);\r\n                });\r\n            });\r\n        }\r\n        exports.atat.loadAndParse(path, options, function (err, render) {\r\n            err ? callback(err) : callback(null, render(model));\r\n        });\r\n    },\r\n    __express: function (path, options, callback) {\r\n        exports.atat.loadAndParse(path, function (err, template) {\r\n            err ? callback(err.toString()) : callback(null, template(options));\r\n        });\r\n    }\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar common_1 = require(\"./common\");\r\nfunction match_recursive(str, left, right) {\r\n    var global = left.global, sticky = left.sticky, output = [], openTokens = 0, delimStart = 0, delimEnd = 0, lastOuterEnd = 0, outerStart, innerStart, leftMatch, rightMatch;\r\n    while (true) {\r\n        leftMatch = regexp_exec(str, left, delimEnd);\r\n        rightMatch = regexp_exec(str, right, delimEnd);\r\n        // Keep the leftmost match only\r\n        if (leftMatch && rightMatch) {\r\n            if (leftMatch.index <= rightMatch.index) {\r\n                rightMatch = null;\r\n            }\r\n            else {\r\n                leftMatch = null;\r\n            }\r\n        }\r\n        // Paths (LM: leftMatch, RM: rightMatch, OT: openTokens):\r\n        // LM | RM | OT | Result\r\n        // 1  | 0  | 1  | loop\r\n        // 1  | 0  | 0  | loop\r\n        // 0  | 1  | 1  | loop\r\n        // 0  | 1  | 0  | throw\r\n        // 0  | 0  | 1  | throw\r\n        // 0  | 0  | 0  | break\r\n        // The paths above don't include the sticky mode special case. The loop ends after the\r\n        // first completed match if not `global`.\r\n        if (leftMatch || rightMatch) {\r\n            delimStart = (leftMatch || rightMatch).index;\r\n            delimEnd = delimStart + (leftMatch || rightMatch)[0].length;\r\n        }\r\n        else if (!openTokens) {\r\n            break;\r\n        }\r\n        if (sticky && !openTokens && delimStart > lastOuterEnd) {\r\n            break;\r\n        }\r\n        if (leftMatch) {\r\n            if (!openTokens) {\r\n                outerStart = delimStart;\r\n                innerStart = delimEnd;\r\n            }\r\n            ++openTokens;\r\n        }\r\n        else if (rightMatch && openTokens) {\r\n            if (!--openTokens) {\r\n                if (outerStart > lastOuterEnd) {\r\n                    output.push({\r\n                        name: common_1.VALUE_NAME_OUTSIDE,\r\n                        value: str.slice(lastOuterEnd, outerStart),\r\n                        start: lastOuterEnd,\r\n                        end: outerStart\r\n                    });\r\n                }\r\n                output.push({\r\n                    name: common_1.VALUE_NAME_INSIDE,\r\n                    value: str.slice(innerStart, delimStart),\r\n                    start: innerStart,\r\n                    end: delimStart,\r\n                    left: {\r\n                        value: str.slice(outerStart, innerStart),\r\n                        start: outerStart,\r\n                        end: innerStart\r\n                    },\r\n                    right: {\r\n                        value: str.slice(delimStart, delimEnd),\r\n                        start: delimStart,\r\n                        end: delimEnd\r\n                    }\r\n                });\r\n                lastOuterEnd = delimEnd;\r\n                if (!global) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            throw new Error('Unbalanced delimiter found in string');\r\n        }\r\n        // If the delimiter matched an empty string, avoid an infinite loop\r\n        if (delimStart === delimEnd) {\r\n            ++delimEnd;\r\n        }\r\n    }\r\n    if (global && str.length > lastOuterEnd) {\r\n        output.push({\r\n            name: common_1.VALUE_NAME_OUTSIDE,\r\n            value: str.slice(lastOuterEnd),\r\n            start: lastOuterEnd,\r\n            end: str.length\r\n        });\r\n    }\r\n    return output;\r\n}\r\nexports.match_recursive = match_recursive;\r\nfunction regexp_test(str, regexp, pos) {\r\n    if (pos === void 0) { pos = 0; }\r\n    regexp.lastIndex = pos;\r\n    var test = regexp.test(str);\r\n    if (regexp.global) {\r\n        regexp.lastIndex = test ? regexp.lastIndex : 0;\r\n    }\r\n    return test;\r\n}\r\nexports.regexp_test = regexp_test;\r\nfunction regexp_exec(str, regexp, pos) {\r\n    if (pos === void 0) { pos = 0; }\r\n    regexp.lastIndex = pos;\r\n    var match = regexp.exec(str);\r\n    if (regexp.global) {\r\n        regexp.lastIndex = match ? regexp.lastIndex : 0;\r\n    }\r\n    return match;\r\n}\r\nexports.regexp_exec = regexp_exec;\r\nfunction clean_array(array) {\r\n    for (var i = 0; i < array.length; i++) {\r\n        if (typeof array[i] === 'undefined') {\r\n            array.splice(i, 1);\r\n            i--;\r\n        }\r\n    }\r\n}\r\nexports.clean_array = clean_array;\r\nfunction match_inline(str, regexp) {\r\n    var global = regexp.global, sticky = regexp.sticky, output = [], lastEnd = 0, leftStart = 0, innerStart, innerEnd;\r\n    while (true) {\r\n        var match = regexp_exec(str, regexp, lastEnd);\r\n        if (match == null) {\r\n            break;\r\n        }\r\n        leftStart = match.index;\r\n        if (sticky && leftStart > lastEnd) {\r\n            break;\r\n        }\r\n        clean_array(match);\r\n        innerStart = leftStart + match[1].length;\r\n        innerEnd = lastEnd + innerStart + match[2].length;\r\n        if (leftStart > lastEnd) {\r\n            output.push({\r\n                name: common_1.VALUE_NAME_OUTSIDE,\r\n                value: str.slice(lastEnd, leftStart),\r\n                start: lastEnd,\r\n                end: leftStart\r\n            });\r\n        }\r\n        output.push({\r\n            name: common_1.VALUE_NAME_INSIDE,\r\n            value: match[2],\r\n            start: innerStart,\r\n            end: innerEnd,\r\n            left: {\r\n                value: match[1],\r\n                start: leftStart,\r\n                end: innerStart\r\n            },\r\n            right: {\r\n                value: match[3],\r\n                start: innerEnd,\r\n                end: innerEnd + match[3].length\r\n            }\r\n        });\r\n        lastEnd = leftStart + match[0].length;\r\n        if (!global) {\r\n            break;\r\n        }\r\n    }\r\n    if (global && str.length > lastEnd) {\r\n        output.push({\r\n            name: common_1.VALUE_NAME_OUTSIDE,\r\n            value: str.slice(lastEnd),\r\n            start: lastEnd,\r\n            end: str.length\r\n        });\r\n    }\r\n    return output;\r\n}\r\nexports.match_inline = match_inline;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.AtatDefaultOpions = {\r\n    it: \"it\",\r\n    $: \"$\",\r\n    basepath: \"\",\r\n    cache: true,\r\n    helpers: {}\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar helpers_1 = require(\"./helpers\");\r\nvar atat_1 = require(\"./atat\");\r\nexports.inline_tags = {\r\n    '(@section\\\\()([^]*?)(\\\\)@)': output_section,\r\n    '(@layout\\\\()([^]*?)(\\\\)@)': compile_layout,\r\n    '(@partial\\\\()([^]*?)(\\\\)@)': compile_partial,\r\n    '(@\\\\()([^]*?)(\\\\)@)': output_as_text,\r\n    '(@!\\\\()([^]*?)(\\\\)@)': output_as_html\r\n};\r\nfunction output_as_text(inside, ctx, callback) {\r\n    try {\r\n        var val = inside.value.trim();\r\n        if (val === '') {\r\n            callback();\r\n        }\r\n        callback(null, \"this.output += this.helpers.encode(\" + inside.value.trim() + \");\");\r\n    }\r\n    catch (e) {\r\n        callback(e);\r\n    }\r\n}\r\nfunction output_as_html(inside, ctx, callback) {\r\n    try {\r\n        var val = inside.value.trim();\r\n        if (val === '') {\r\n            callback();\r\n        }\r\n        callback(null, \"this.output += (\" + inside.value.trim() + \");\");\r\n    }\r\n    catch (e) {\r\n        callback(e);\r\n    }\r\n}\r\nfunction compile_layout(inside, ctx, callback) {\r\n    try {\r\n        if (ctx.layout) {\r\n            return callback();\r\n        }\r\n        atat_1.atat.loadAndParse(helpers_1.escape_quotes(inside.value), ctx.options, function (err, template) {\r\n            if (err) {\r\n                return callback(err);\r\n            }\r\n            ctx.layout = template;\r\n            template.context.parent = ctx;\r\n            callback();\r\n        });\r\n    }\r\n    catch (e) {\r\n        callback(e);\r\n    }\r\n}\r\nfunction compile_partial(inside, ctx, callback) {\r\n    try {\r\n        var value = inside.value.trim();\r\n        if (value == '') {\r\n            return callback(new Error('Partial parsing error'));\r\n        }\r\n        var args_1 = value.split(/\\s*,\\s*/g);\r\n        var uri = helpers_1.escape_quotes(args_1.shift());\r\n        atat_1.atat.loadAndParse(uri, ctx.options, function (err, template) {\r\n            if (err) {\r\n                return callback(err);\r\n            }\r\n            ctx.partials.push(template);\r\n            template.context.parent = ctx;\r\n            var output = \"this.output += this.partials[\" + (ctx.partials.length - 1) + \"](\" + args_1 + \");\";\r\n            callback(null, output);\r\n        });\r\n    }\r\n    catch (e) {\r\n        callback(e);\r\n    }\r\n}\r\nfunction output_section(inside, ctx, callback) {\r\n    try {\r\n        var name_1 = helpers_1.escape_quotes(inside.value);\r\n        var output = \"this.output += (function(){var s = this.section('\" + name_1 + \"'); return s?s(\" + ctx.arguments + \"):\\\"\\\";}).call(this);\";\r\n        callback(null, output);\r\n    }\r\n    catch (e) {\r\n        callback(e);\r\n    }\r\n}\r\nfunction output_call_helper(inside, ctx, callback) {\r\n    try {\r\n        var name_2 = inside.left.value.substring(1, inside.left.value.length - 1);\r\n        if (typeof ctx.helpers[name_2] !== 'function') {\r\n            throw \"Helper \\\"\" + name_2 + \"\\\" didn't declarated\";\r\n        }\r\n        callback(null, \"this.output += this.helpers.\" + name_2 + \"(\" + inside.value.trim() + \");\");\r\n    }\r\n    catch (e) {\r\n        callback(e);\r\n    }\r\n}\r\nexports.output_call_helper = output_call_helper;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar options_1 = require(\"./options\");\r\nvar helpers_1 = require(\"./helpers\");\r\nvar regexp_1 = require(\"./regexp\");\r\nvar inline_1 = require(\"./inline\");\r\nvar tags_1 = require(\"./tags\");\r\nvar AtatContext = /** @class */ (function () {\r\n    function AtatContext(opts) {\r\n        var _this = this;\r\n        this.options = helpers_1.merge(options_1.AtatDefaultOpions, opts);\r\n        this.helpers = helpers_1.merge(helpers_1.helpers, opts.helpers);\r\n        this.model = null;\r\n        this.output = '';\r\n        this.parts = [];\r\n        this.parent = null;\r\n        this.arguments = [this.options.it, this.options.$, 'body'].join(',');\r\n        this.tags = helpers_1.get_tags(tags_1.tags);\r\n        this.inline = helpers_1.get_tags_inline(inline_1.inline_tags);\r\n        helpers_1.loop(inline_1.inline_tags, function (compiler, regexp) {\r\n            _this.tags.compilers.push({\r\n                compiler: compiler,\r\n                regexp: new RegExp(regexp, 'g')\r\n            });\r\n        });\r\n        this.layout = null;\r\n        this.partials = [];\r\n        this.sections = {};\r\n    }\r\n    AtatContext.prototype.section = function (name) {\r\n        return name ? this.sections[name] || (this.parent && this.parent.section(name)) : null;\r\n    };\r\n    AtatContext.prototype.compiler = function (str) {\r\n        if (str === void 0) { str = \"\"; }\r\n        for (var i = 0, l = this.tags.compilers.length; i < l; i++) {\r\n            var item = this.tags.compilers[i];\r\n            if (regexp_1.regexp_test(str, item.regexp)) {\r\n                return item.compiler;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    return AtatContext;\r\n}());\r\nexports.AtatContext = AtatContext;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar common_1 = require(\"./common\");\r\nvar regexp_1 = require(\"./regexp\");\r\nvar helpers_1 = require(\"./helpers\");\r\nvar atat_1 = require(\"./atat\");\r\nexports.tags = {\r\n    '@\\\\{': compile_code,\r\n    '@if\\\\s*\\\\(': compile_if,\r\n    '@while\\\\s*\\\\(': compile_while,\r\n    '@for\\\\s*\\\\(': compile_for,\r\n    '@function\\\\s+[$A-Za-z0-9]*\\\\s*\\\\(': compile_function,\r\n    '@section\\\\s+[$A-Za-z0-9]*\\\\s*\\\\{': compile_section\r\n};\r\nfunction compile_code(inside, ctx, callback) {\r\n    callback(null, inside.value.trim());\r\n}\r\nfunction compile_for(inside, ctx, callback) {\r\n    var code = 'for(' + inside.value + '}';\r\n    var blocks = regexp_1.match_recursive(code, /\\{/g, /\\}/g);\r\n    var out = '';\r\n    out += blocks[0].value;\r\n    out += '{';\r\n    this.compile(blocks[1].value, ctx, function (err, res) {\r\n        if (err) {\r\n            return callback(err);\r\n        }\r\n        out += res;\r\n        out += '}';\r\n        callback(null, out);\r\n    });\r\n}\r\nfunction compile_function(inside, ctx, callback) {\r\n    var left = inside.left.value.trim().substring(1);\r\n    callback(null, left + inside.value.trim() + '}');\r\n}\r\nfunction compile_if(inside, ctx, callback) {\r\n    var _this = this;\r\n    var code = 'if(' + inside.value + '}';\r\n    var blocks = regexp_1.match_recursive(code, /\\{/g, /\\}/g);\r\n    helpers_1.loop_async(blocks, function (block, i, array, callback) {\r\n        if (block.name == common_1.VALUE_NAME_OUTSIDE) {\r\n            return callback(null, block.value);\r\n        }\r\n        _this.compile(block.value, ctx, callback);\r\n    }, function (err, results) {\r\n        if (err) {\r\n            return callback(err);\r\n        }\r\n        callback(null, results.join(''));\r\n    });\r\n}\r\nfunction compile_section(inside, ctx, callback) {\r\n    var block = inside.value.trim();\r\n    var value = inside.left.value.trim();\r\n    var reg_name = /^@section\\s+([A-Za-z0-9]+)\\s*\\{/g;\r\n    var match = regexp_1.regexp_exec(value, reg_name);\r\n    if (!match || match.length > 2) {\r\n        return callback(new Error('Section parsing error'));\r\n    }\r\n    var name = match[1].trim();\r\n    if (ctx.sections[name]) {\r\n        return callback(new Error('Section already exists'));\r\n    }\r\n    atat_1.atat.parse(block, ctx.options, function (err, template) {\r\n        if (err) {\r\n            return callback(err);\r\n        }\r\n        template.context.parent = ctx;\r\n        ctx.sections[name] = template;\r\n        callback(null);\r\n    });\r\n}\r\nfunction compile_while(inside, ctx, callback) {\r\n    var code = 'while(' + inside.value + '}';\r\n    var blocks = regexp_1.match_recursive(code, /\\{/g, /\\}/g);\r\n    var out = '';\r\n    out += blocks[0].value;\r\n    out += '{';\r\n    this.compile(blocks[1].value, ctx, function (err, res) {\r\n        if (err) {\r\n            return callback(err);\r\n        }\r\n        out += res;\r\n        out += '}';\r\n        callback(null, out);\r\n    });\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar common_1 = require(\"./common\");\r\nvar helpers_1 = require(\"./helpers\");\r\nvar regexp_1 = require(\"./regexp\");\r\nvar inline_1 = require(\"./inline\");\r\nvar AtatCompiler = /** @class */ (function () {\r\n    function AtatCompiler() {\r\n    }\r\n    AtatCompiler.prototype.compile = function (input, ctx, callback) {\r\n        var _this = this;\r\n        try {\r\n            if (input.length == 0) {\r\n                callback(null, '');\r\n                return;\r\n            }\r\n            var blocks = regexp_1.match_recursive(input, ctx.tags.open, ctx.tags.close);\r\n            helpers_1.loop_async(blocks, function (block, i, array, callback) {\r\n                try {\r\n                    if (block.name == common_1.VALUE_NAME_OUTSIDE) {\r\n                        if (block.value.trim() == '') {\r\n                            callback(null, '');\r\n                            return;\r\n                        }\r\n                        _this.compile_inline(block.value, ctx, callback);\r\n                        return;\r\n                    }\r\n                    if (block.name == common_1.VALUE_NAME_INSIDE) {\r\n                        var left = block.left, inside = block, right = block.right;\r\n                        var compiler = ctx.compiler(left.value);\r\n                        if (!compiler) {\r\n                            _this.compile_inline(left.value + inside.value + right.value, ctx, callback);\r\n                            return;\r\n                        }\r\n                        compiler.call(_this, inside, ctx, callback);\r\n                        return;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    callback(e);\r\n                }\r\n            }, function (err, results) {\r\n                if (err) {\r\n                    return callback(err);\r\n                }\r\n                callback(null, results.join(''));\r\n            });\r\n        }\r\n        catch (e) {\r\n            callback(e);\r\n        }\r\n    };\r\n    AtatCompiler.prototype.compile_inline = function (input, ctx, callback) {\r\n        var _this = this;\r\n        try {\r\n            if (input.length == 0) {\r\n                callback(null, '');\r\n                return;\r\n            }\r\n            var blocks = regexp_1.match_inline(input, ctx.inline);\r\n            helpers_1.loop_async(blocks, function (block, i, array, callback) {\r\n                try {\r\n                    if (block.name == common_1.VALUE_NAME_OUTSIDE) {\r\n                        ctx.parts.push(block.value);\r\n                        callback(null, 'this.output += this.parts[' + (ctx.parts.length - 1) + '];');\r\n                        return;\r\n                    }\r\n                    if (block.name == common_1.VALUE_NAME_INSIDE) {\r\n                        var left = block.left, inside = block, right = block.right;\r\n                        if (inside.value.trim() == '') {\r\n                            callback(null, '');\r\n                            return;\r\n                        }\r\n                        var compiler = ctx.compiler(left.value + inside.value + right.value);\r\n                        if (!compiler) {\r\n                            inline_1.output_call_helper.call(_this, inside, ctx, callback);\r\n                            return;\r\n                        }\r\n                        compiler.call(_this, inside, ctx, callback);\r\n                        return;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    callback(e);\r\n                }\r\n            }, function (err, results) {\r\n                if (err) {\r\n                    return callback(err);\r\n                }\r\n                callback(null, results.join(''));\r\n            });\r\n        }\r\n        catch (e) {\r\n            callback(e);\r\n        }\r\n    };\r\n    return AtatCompiler;\r\n}());\r\nexports.AtatCompiler = AtatCompiler;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction load_file(path, callback) {\r\n    var request = new XMLHttpRequest();\r\n    request.open('GET', path, true);\r\n    request.onreadystatechange = function () {\r\n        if (this.readyState === 4) {\r\n            if (this.status >= 200 && this.status < 400) {\r\n                callback(null, this.responseText);\r\n            }\r\n            else {\r\n                callback(new Error('Not able to load template \"' + path + '\"'));\r\n            }\r\n        }\r\n    };\r\n    request.send();\r\n    request = null;\r\n}\r\nexports.load_file = load_file;\r\n;\r\n"],"sourceRoot":""}