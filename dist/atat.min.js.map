{"version":3,"sources":["webpack://atat/webpack/universalModuleDefinition","webpack://atat/webpack/bootstrap","webpack://atat/./src/common.ts","webpack://atat/./src/helpers.ts","webpack://atat/./src/atat.ts","webpack://atat/./src/regexp.ts","webpack://atat/./src/inline.ts","webpack://atat/./src/options.ts","webpack://atat/./src/compiler.ts","webpack://atat/./src/context.ts","webpack://atat/./src/tags.ts","webpack://atat/./src/load_file.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","m","Object","defineProperty","value","noop","VALUE_NAME_OUTSIDE","VALUE_NAME_INSIDE","HTML_RULES","\"","&","'","/","<",">","CLEAR_TAGS","MATCH_HTML","common_1","loop","array","fn","prototype","toString","call","i","l","length","x","hasOwnProperty","encode_html","code","replace","trim_string","str","chars","_i","arguments","String","trim","result","indexOf","charAt","substring","json_stringify","obj","JSON","stringify","join_helper","separator","Array","join","uppercase_helper","toUpperCase","lowercase_helper","toLowerCase","helpers","encode","json","lower","upper","merge","src","dest","get_tags","tags","regexps","compiler","regexp","push","compilers","RegExp","close","open","get_tags_inline","inlineTags","loop_async","callback","ready","finished","results","cb","index","err","res","escape_quotes","resolveUrl","base","relative","stack","split","parts","pop","parts_1","part","compiler_1","context_1","helpers_1","load_file_1","options_1","atat","config","opts","options","DEFAULT_OPTIONS","parse","input","optionsArg","callbackArg","Promise","resolve","reject","ctx","AtatContext","AtatCompiler","compile","output","render","Function","template","model","body","layout","context","e","loadAndParse","path","load_file","content","loadAndRender","__express","regexp_exec","pos","lastIndex","match","exec","global","clean_array","splice","match_recursive","left","right","outerStart","innerStart","leftMatch","rightMatch","sticky","openTokens","delimStart","delimEnd","lastOuterEnd","Error","name","slice","start","end","regexp_test","test","match_inline","innerEnd","lastEnd","leftStart","atat_1","(@!\\()([^]*?)(\\)@)","inside","(@\\()([^]*?)(\\)@)","(@layout\\()([^]*?)(\\)@)","parent","(@partial\\()([^]*?)(\\)@)","args_1","uri","shift","partials","(@section\\()([^]*?)(\\)@)","output_call_helper","name_2","$","basepath","cache","it","inline_1","regexp_1","_this","this","blocks","block","loopCallback","compile_inline","inline","tags_1","section","sections","item","@\\{","@for\\s*\\(","out","@function\\s+[$A-Za-z0-9]*\\s*\\(","@if\\s*\\(","@section\\s+[$A-Za-z0-9]*\\s*\\{","@while\\s*\\(","request","XMLHttpRequest","onreadystatechange","readyState","status","responseText","send","c","d","getter","o","enumerable","get","r","Symbol","toStringTag","t","mode","__esModule","ns","create","key","bind","n","object","property","p","s","moduleId","modules"],"mappings":"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","file":"atat.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"atat\"] = factory();\n\telse\n\t\troot[\"atat\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// tslint:disable-next-line: no-empty\r\nfunction noop() { }\r\nexports.noop = noop;\r\nexports.VALUE_NAME_OUTSIDE = 'outside';\r\nexports.VALUE_NAME_INSIDE = 'inside';\r\nexports.HTML_RULES = {\r\n    '\"': '&#34;',\r\n    '&': '&#38;',\r\n    \"'\": '&#39;',\r\n    '/': '&#47;',\r\n    '<': '&#60;',\r\n    '>': '&#62;',\r\n};\r\nexports.CLEAR_TAGS = /[-[\\](){}*+?.,\\\\^$|#\\s]/g;\r\nexports.MATCH_HTML = /&(?!#?\\w+;)|<|>|\"|'|\\//g;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar common_1 = require(\"./common\");\r\nexports.helpers = {\r\n    encode: encode_html,\r\n    join: join_helper,\r\n    json: json_stringify,\r\n    lower: lowercase_helper,\r\n    upper: uppercase_helper,\r\n};\r\nfunction merge(src, dest) {\r\n    if (dest === void 0) { dest = {}; }\r\n    for (var x in src) {\r\n        if (!dest.hasOwnProperty(x) && src.hasOwnProperty(x)) {\r\n            if (typeof src[x] === 'object') {\r\n                dest[x] = merge(src[x]);\r\n            }\r\n            else {\r\n                dest[x] = src[x];\r\n            }\r\n        }\r\n    }\r\n    return dest;\r\n}\r\nexports.merge = merge;\r\nfunction get_tags(tags) {\r\n    var regexps = [];\r\n    loop(tags, function (compiler, regexp) {\r\n        if (regexps.indexOf(regexp) === -1) {\r\n            regexps.push(regexp);\r\n        }\r\n    });\r\n    var compilers = [];\r\n    loop(tags, function (compiler, regexp) {\r\n        compilers.push({\r\n            compiler: compiler,\r\n            regexp: new RegExp(regexp, 'g'),\r\n        });\r\n    });\r\n    return {\r\n        compilers: compilers,\r\n        close: /}@/g,\r\n        open: new RegExp(regexps.join('|'), 'g'),\r\n    };\r\n}\r\nexports.get_tags = get_tags;\r\nfunction get_tags_inline(inlineTags) {\r\n    var regexps = [];\r\n    loop(inlineTags, function (compiler, regexp) {\r\n        regexps.push(regexp);\r\n    });\r\n    regexps.push('(@[A-Za-z0-9$]+\\\\()([^]*?)(\\\\)@)');\r\n    return new RegExp(regexps.join('|'), 'g');\r\n}\r\nexports.get_tags_inline = get_tags_inline;\r\nfunction loop(array, fn) {\r\n    if (Object.prototype.toString.call(array) !== '[object Array]') {\r\n        for (var x in array) {\r\n            if (array.hasOwnProperty(x)) {\r\n                fn(array[x], x, array);\r\n            }\r\n        }\r\n        return;\r\n    }\r\n    for (var i = 0, l = array.length; i < l; i += 1) {\r\n        fn(array[i], i, array);\r\n    }\r\n}\r\nexports.loop = loop;\r\nfunction loop_async(array, fn, callback) {\r\n    var ready = 0;\r\n    var finished = false;\r\n    var results = [];\r\n    var length = array.length;\r\n    for (var i = 0; i < length; i += 1) {\r\n        fn(array[i], i, array, cb(i));\r\n    }\r\n    function cb(index) {\r\n        return function (err, res) {\r\n            if (finished) {\r\n                return;\r\n            }\r\n            if (err) {\r\n                finished = true;\r\n                callback(err);\r\n                return;\r\n            }\r\n            results[index] = res;\r\n            ready += 1;\r\n            if (ready === length) {\r\n                finished = true;\r\n                callback(null, results);\r\n            }\r\n        };\r\n    }\r\n}\r\nexports.loop_async = loop_async;\r\nfunction encode_html(code) {\r\n    if (code === void 0) { code = ''; }\r\n    return code.toString().replace(common_1.MATCH_HTML, function (m) {\r\n        return common_1.HTML_RULES[m] || m;\r\n    });\r\n}\r\nexports.encode_html = encode_html;\r\nfunction trim_string(str) {\r\n    var chars = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        chars[_i - 1] = arguments[_i];\r\n    }\r\n    if (chars.length === 0) {\r\n        return String.prototype.trim.call(str);\r\n    }\r\n    var result = str;\r\n    while (chars.indexOf(str.charAt(0)) >= 0) {\r\n        result = str.substring(1);\r\n    }\r\n    while (chars.indexOf(str.charAt(str.length - 1)) >= 0) {\r\n        result = str.substring(0, str.length - 1);\r\n    }\r\n    return result;\r\n}\r\nexports.trim_string = trim_string;\r\nfunction escape_quotes(str) {\r\n    return trim_string(str)\r\n        .replace(/^\"(.*)\"$/g, '$1')\r\n        .replace(/^'(.*)'$/g, '$1');\r\n}\r\nexports.escape_quotes = escape_quotes;\r\nfunction json_stringify(obj) {\r\n    return JSON.stringify(obj);\r\n}\r\nexports.json_stringify = json_stringify;\r\nfunction join_helper(array, separator) {\r\n    if (array === void 0) { array = []; }\r\n    if (separator === void 0) { separator = ''; }\r\n    return Array.prototype.join.call(array, separator);\r\n}\r\nexports.join_helper = join_helper;\r\nfunction uppercase_helper(str) {\r\n    if (str === void 0) { str = ''; }\r\n    return str.toString().toUpperCase();\r\n}\r\nexports.uppercase_helper = uppercase_helper;\r\nfunction lowercase_helper(str) {\r\n    if (str === void 0) { str = ''; }\r\n    return str.toString().toLowerCase();\r\n}\r\nexports.lowercase_helper = lowercase_helper;\r\nfunction resolveUrl(base, relative) {\r\n    var stack = base.split('/');\r\n    var parts = relative.split('/');\r\n    stack.pop();\r\n    for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {\r\n        var part = parts_1[_i];\r\n        if (part === '.') {\r\n            continue;\r\n        }\r\n        if (part === '..') {\r\n            stack.pop();\r\n        }\r\n        else {\r\n            stack.push(part);\r\n        }\r\n    }\r\n    return stack.join('/');\r\n}\r\nexports.resolveUrl = resolveUrl;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar common_1 = require(\"./common\");\r\nvar compiler_1 = require(\"./compiler\");\r\nvar context_1 = require(\"./context\");\r\nvar helpers_1 = require(\"./helpers\");\r\nvar load_file_1 = require(\"./load_file\");\r\nvar options_1 = require(\"./options\");\r\nexports.atat = {\r\n    config: function (opts) {\r\n        var options = helpers_1.merge(options_1.DEFAULT_OPTIONS, opts);\r\n        for (var x in options) {\r\n            if (options_1.DEFAULT_OPTIONS.hasOwnProperty(x)) {\r\n                options_1.DEFAULT_OPTIONS[x] = options[x];\r\n            }\r\n        }\r\n    },\r\n    parse: function (input, optionsArg, callbackArg) {\r\n        if (optionsArg === void 0) { optionsArg = {}; }\r\n        if (callbackArg === void 0) { callbackArg = common_1.noop; }\r\n        var options = optionsArg;\r\n        var callback = callbackArg;\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = {};\r\n        }\r\n        if (callback === common_1.noop && typeof Promise !== 'undefined') {\r\n            return new Promise(function (resolve, reject) {\r\n                exports.atat.parse(input, options, function (err, result) {\r\n                    err ? reject(err) : resolve(result);\r\n                });\r\n            });\r\n        }\r\n        var ctx = new context_1.AtatContext(options);\r\n        var compiler = new compiler_1.AtatCompiler();\r\n        compiler.compile(input, ctx, function (err, output) {\r\n            if (err) {\r\n                return callback(err);\r\n            }\r\n            // tslint:disable-next-line: no-function-constructor-with-string-args\r\n            var render = new Function(ctx.arguments, output + \";return this.output;\");\r\n            ctx.template = function (model) {\r\n                try {\r\n                    ctx.output = '';\r\n                    ctx.model = model || ctx.model;\r\n                    var body = render.call(ctx, ctx.model, ctx.helpers, ctx.body);\r\n                    if (ctx.layout) {\r\n                        ctx.layout.context.body = body;\r\n                        body = ctx.layout(ctx.model);\r\n                    }\r\n                    return body;\r\n                }\r\n                catch (e) {\r\n                    return e.toString();\r\n                }\r\n            };\r\n            ctx.template.context = ctx;\r\n            callback(null, ctx.template);\r\n        });\r\n    },\r\n    loadAndParse: function (path, optionsArg, callbackArg) {\r\n        if (optionsArg === void 0) { optionsArg = {}; }\r\n        if (callbackArg === void 0) { callbackArg = common_1.noop; }\r\n        var options = optionsArg;\r\n        var callback = callbackArg;\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = {};\r\n        }\r\n        if (callback === common_1.noop && typeof Promise !== 'undefined') {\r\n            return new Promise(function (resolve, reject) {\r\n                exports.atat.loadAndParse(path, options, function (err, result) {\r\n                    err ? reject(err) : resolve(result);\r\n                });\r\n            });\r\n        }\r\n        load_file_1.load_file(path, function (err, content) {\r\n            err ? callback(err) : exports.atat.parse(content, options, callback);\r\n        });\r\n    },\r\n    render: function (input, model, optionsArg, callbackArg) {\r\n        if (model === void 0) { model = {}; }\r\n        if (optionsArg === void 0) { optionsArg = {}; }\r\n        if (callbackArg === void 0) { callbackArg = common_1.noop; }\r\n        var options = optionsArg;\r\n        var callback = callbackArg;\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = {};\r\n        }\r\n        if (callback === common_1.noop && typeof Promise !== 'undefined') {\r\n            return new Promise(function (resolve, reject) {\r\n                exports.atat.render(input, model, options, function (err, result) {\r\n                    err ? reject(err) : resolve(result);\r\n                });\r\n            });\r\n        }\r\n        exports.atat.parse(input, options, function (err, render) {\r\n            err ? callback(err) : callback(null, render(model));\r\n        });\r\n    },\r\n    loadAndRender: function (path, model, optionsArg, callbackArg) {\r\n        if (optionsArg === void 0) { optionsArg = {}; }\r\n        if (callbackArg === void 0) { callbackArg = common_1.noop; }\r\n        var options = optionsArg;\r\n        var callback = callbackArg;\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = {};\r\n        }\r\n        if (callback === common_1.noop && typeof Promise !== 'undefined') {\r\n            return new Promise(function (resolve, reject) {\r\n                exports.atat.loadAndRender(path, model, options, function (err, result) {\r\n                    err ? reject(err) : resolve(result);\r\n                });\r\n            });\r\n        }\r\n        exports.atat.loadAndParse(path, options, function (err, render) {\r\n            err ? callback(err) : callback(null, render(model));\r\n        });\r\n    },\r\n    // tslint:disable-next-line: function-name\r\n    __express: function (path, options, callback) {\r\n        exports.atat.loadAndParse(path, function (err, template) {\r\n            err ? callback(err.toString()) : callback(null, template(options));\r\n        });\r\n    },\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar common_1 = require(\"./common\");\r\nfunction match_recursive(str, left, right) {\r\n    var global = left.global;\r\n    var sticky = left.sticky;\r\n    var output = [];\r\n    var openTokens = 0;\r\n    var delimStart = 0;\r\n    var delimEnd = 0;\r\n    var lastOuterEnd = 0;\r\n    var outerStart;\r\n    var innerStart;\r\n    var leftMatch;\r\n    var rightMatch;\r\n    while (true) {\r\n        leftMatch = regexp_exec(str, left, delimEnd);\r\n        rightMatch = regexp_exec(str, right, delimEnd);\r\n        // Keep the leftmost match only\r\n        if (leftMatch && rightMatch) {\r\n            if (leftMatch.index <= rightMatch.index) {\r\n                rightMatch = null;\r\n            }\r\n            else {\r\n                leftMatch = null;\r\n            }\r\n        }\r\n        // Paths (LM: leftMatch, RM: rightMatch, OT: openTokens):\r\n        // LM | RM | OT | Result\r\n        // 1  | 0  | 1  | loop\r\n        // 1  | 0  | 0  | loop\r\n        // 0  | 1  | 1  | loop\r\n        // 0  | 1  | 0  | throw\r\n        // 0  | 0  | 1  | throw\r\n        // 0  | 0  | 0  | break\r\n        // The paths above don't include the sticky mode special case. The loop ends after the\r\n        // first completed match if not `global`.\r\n        if (leftMatch || rightMatch) {\r\n            delimStart = (leftMatch || rightMatch).index;\r\n            delimEnd = delimStart + (leftMatch || rightMatch)[0].length;\r\n        }\r\n        else if (!openTokens) {\r\n            break;\r\n        }\r\n        if (sticky && !openTokens && delimStart > lastOuterEnd) {\r\n            break;\r\n        }\r\n        if (leftMatch) {\r\n            if (!openTokens) {\r\n                outerStart = delimStart;\r\n                innerStart = delimEnd;\r\n            }\r\n            openTokens += 1;\r\n        }\r\n        else if (rightMatch && openTokens) {\r\n            openTokens -= 1;\r\n            if (!openTokens) {\r\n                if (outerStart > lastOuterEnd) {\r\n                    output.push({\r\n                        name: common_1.VALUE_NAME_OUTSIDE,\r\n                        value: str.slice(lastOuterEnd, outerStart),\r\n                        start: lastOuterEnd,\r\n                        end: outerStart,\r\n                    });\r\n                }\r\n                output.push({\r\n                    name: common_1.VALUE_NAME_INSIDE,\r\n                    value: str.slice(innerStart, delimStart),\r\n                    start: innerStart,\r\n                    end: delimStart,\r\n                    left: {\r\n                        value: str.slice(outerStart, innerStart),\r\n                        start: outerStart,\r\n                        end: innerStart,\r\n                    },\r\n                    right: {\r\n                        value: str.slice(delimStart, delimEnd),\r\n                        start: delimStart,\r\n                        end: delimEnd,\r\n                    },\r\n                });\r\n                lastOuterEnd = delimEnd;\r\n                if (!global) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            throw new Error('Unbalanced delimiter found in string');\r\n        }\r\n        // If the delimiter matched an empty string, avoid an infinite loop\r\n        if (delimStart === delimEnd) {\r\n            delimEnd += 1;\r\n        }\r\n    }\r\n    if (global && str.length > lastOuterEnd) {\r\n        output.push({\r\n            end: str.length,\r\n            name: common_1.VALUE_NAME_OUTSIDE,\r\n            start: lastOuterEnd,\r\n            value: str.slice(lastOuterEnd),\r\n        });\r\n    }\r\n    return output;\r\n}\r\nexports.match_recursive = match_recursive;\r\nfunction regexp_test(str, regexp, pos) {\r\n    if (pos === void 0) { pos = 0; }\r\n    regexp.lastIndex = pos;\r\n    var test = regexp.test(str);\r\n    if (regexp.global) {\r\n        regexp.lastIndex = test ? regexp.lastIndex : 0;\r\n    }\r\n    return test;\r\n}\r\nexports.regexp_test = regexp_test;\r\nfunction regexp_exec(str, regexp, pos) {\r\n    if (pos === void 0) { pos = 0; }\r\n    regexp.lastIndex = pos;\r\n    var match = regexp.exec(str);\r\n    if (regexp.global) {\r\n        regexp.lastIndex = match ? regexp.lastIndex : 0;\r\n    }\r\n    return match;\r\n}\r\nexports.regexp_exec = regexp_exec;\r\nfunction clean_array(array) {\r\n    for (var i = 0; i < array.length; i += 1) {\r\n        if (typeof array[i] === 'undefined') {\r\n            array.splice(i, 1);\r\n            i -= 1;\r\n        }\r\n    }\r\n}\r\nexports.clean_array = clean_array;\r\nfunction match_inline(str, regexp) {\r\n    var global = regexp.global;\r\n    var sticky = regexp.sticky;\r\n    var output = [];\r\n    var lastEnd = 0;\r\n    var leftStart = 0;\r\n    var innerStart;\r\n    var innerEnd;\r\n    while (true) {\r\n        var match = regexp_exec(str, regexp, lastEnd);\r\n        if (match === null) {\r\n            break;\r\n        }\r\n        leftStart = match.index;\r\n        if (sticky && leftStart > lastEnd) {\r\n            break;\r\n        }\r\n        clean_array(match);\r\n        innerStart = leftStart + match[1].length;\r\n        innerEnd = lastEnd + innerStart + match[2].length;\r\n        if (leftStart > lastEnd) {\r\n            output.push({\r\n                name: common_1.VALUE_NAME_OUTSIDE,\r\n                value: str.slice(lastEnd, leftStart),\r\n                start: lastEnd,\r\n                end: leftStart,\r\n            });\r\n        }\r\n        output.push({\r\n            name: common_1.VALUE_NAME_INSIDE,\r\n            value: match[2],\r\n            start: innerStart,\r\n            end: innerEnd,\r\n            left: {\r\n                value: match[1],\r\n                start: leftStart,\r\n                end: innerStart,\r\n            },\r\n            right: {\r\n                value: match[3],\r\n                start: innerEnd,\r\n                end: innerEnd + match[3].length,\r\n            },\r\n        });\r\n        lastEnd = leftStart + match[0].length;\r\n        if (!global) {\r\n            break;\r\n        }\r\n    }\r\n    if (global && str.length > lastEnd) {\r\n        output.push({\r\n            name: common_1.VALUE_NAME_OUTSIDE,\r\n            value: str.slice(lastEnd),\r\n            start: lastEnd,\r\n            end: str.length,\r\n        });\r\n    }\r\n    return output;\r\n}\r\nexports.match_inline = match_inline;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar atat_1 = require(\"./atat\");\r\nvar helpers_1 = require(\"./helpers\");\r\nexports.inlineTags = {\r\n    '(@!\\\\()([^]*?)(\\\\)@)': output_as_html,\r\n    '(@\\\\()([^]*?)(\\\\)@)': output_as_text,\r\n    '(@layout\\\\()([^]*?)(\\\\)@)': compile_layout,\r\n    '(@partial\\\\()([^]*?)(\\\\)@)': compile_partial,\r\n    '(@section\\\\()([^]*?)(\\\\)@)': output_section,\r\n};\r\nfunction output_as_text(inside, ctx, callback) {\r\n    try {\r\n        var val = inside.value.trim();\r\n        if (val === '') {\r\n            callback();\r\n        }\r\n        callback(null, \"this.output += this.helpers.encode(\" + inside.value.trim() + \");\");\r\n    }\r\n    catch (e) {\r\n        callback(e);\r\n    }\r\n}\r\nfunction output_as_html(inside, ctx, callback) {\r\n    try {\r\n        var val = inside.value.trim();\r\n        if (val === '') {\r\n            callback();\r\n        }\r\n        callback(null, \"this.output += (\" + inside.value.trim() + \");\");\r\n    }\r\n    catch (e) {\r\n        callback(e);\r\n    }\r\n}\r\nfunction compile_layout(inside, ctx, callback) {\r\n    try {\r\n        if (ctx.layout) {\r\n            return callback();\r\n        }\r\n        atat_1.atat.loadAndParse(helpers_1.escape_quotes(inside.value), ctx.options, function (err, template) {\r\n            if (err) {\r\n                return callback(err);\r\n            }\r\n            ctx.layout = template;\r\n            template.context.parent = ctx;\r\n            callback();\r\n        });\r\n    }\r\n    catch (e) {\r\n        callback(e);\r\n    }\r\n}\r\nfunction compile_partial(inside, ctx, callback) {\r\n    try {\r\n        var value = inside.value.trim();\r\n        if (value === '') {\r\n            return callback(new Error('Partial parsing error'));\r\n        }\r\n        var args_1 = value.split(/\\s*,\\s*/g);\r\n        var uri = helpers_1.escape_quotes(args_1.shift());\r\n        atat_1.atat.loadAndParse(uri, ctx.options, function (err, template) {\r\n            if (err) {\r\n                return callback(err);\r\n            }\r\n            ctx.partials.push(template);\r\n            template.context.parent = ctx;\r\n            var output = \"this.output += this.partials[\" + (ctx.partials.length -\r\n                1) + \"](\" + args_1 + \");\";\r\n            callback(null, output);\r\n        });\r\n    }\r\n    catch (e) {\r\n        callback(e);\r\n    }\r\n}\r\nfunction output_section(inside, ctx, callback) {\r\n    try {\r\n        var name_1 = helpers_1.escape_quotes(inside.value);\r\n        var output = \"this.output += (function(){var s = this.section('\" + name_1 + \"'); \" +\r\n            (\"return s?s(\" + ctx.arguments + \"):\\\"\\\";}).call(this);\");\r\n        callback(null, output);\r\n    }\r\n    catch (e) {\r\n        callback(e);\r\n    }\r\n}\r\nfunction output_call_helper(inside, ctx, callback) {\r\n    try {\r\n        var name_2 = inside.left.value.substring(1, inside.left.value.length - 1);\r\n        if (typeof ctx.helpers[name_2] !== 'function') {\r\n            throw new Error(\"Helper \" + name_2 + \" isn't declarated\");\r\n        }\r\n        callback(null, \"this.output += this.helpers.\" + name_2 + \"(\" + inside.value.trim() + \");\");\r\n    }\r\n    catch (e) {\r\n        callback(e);\r\n    }\r\n}\r\nexports.output_call_helper = output_call_helper;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DEFAULT_OPTIONS = {\r\n    $: '$',\r\n    basepath: '',\r\n    cache: true,\r\n    helpers: {},\r\n    it: 'it',\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar common_1 = require(\"./common\");\r\nvar helpers_1 = require(\"./helpers\");\r\nvar inline_1 = require(\"./inline\");\r\nvar regexp_1 = require(\"./regexp\");\r\nvar AtatCompiler = /** @class */ (function () {\r\n    function AtatCompiler() {\r\n    }\r\n    AtatCompiler.prototype.compile = function (input, ctx, callback) {\r\n        var _this = this;\r\n        try {\r\n            if (input.length === 0) {\r\n                callback(null, '');\r\n                return;\r\n            }\r\n            var blocks = regexp_1.match_recursive(input, ctx.tags.open, ctx.tags.close);\r\n            helpers_1.loop_async(blocks, function (block, i, array, loopCallback) {\r\n                try {\r\n                    if (block.name === common_1.VALUE_NAME_OUTSIDE) {\r\n                        if (block.value.trim() === '') {\r\n                            loopCallback(null, '');\r\n                            return;\r\n                        }\r\n                        _this.compile_inline(block.value, ctx, loopCallback);\r\n                        return;\r\n                    }\r\n                    if (block.name === common_1.VALUE_NAME_INSIDE) {\r\n                        var left = block.left;\r\n                        var inside = block;\r\n                        var right = block.right;\r\n                        var compiler = ctx.compiler(left.value);\r\n                        if (!compiler) {\r\n                            _this.compile_inline(left.value + inside.value + right.value, ctx, loopCallback);\r\n                            return;\r\n                        }\r\n                        compiler.call(_this, inside, ctx, loopCallback);\r\n                        return;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    loopCallback(e);\r\n                }\r\n            }, function (err, results) {\r\n                if (err) {\r\n                    return callback(err);\r\n                }\r\n                callback(null, results.join(''));\r\n            });\r\n        }\r\n        catch (e) {\r\n            callback(e);\r\n        }\r\n    };\r\n    AtatCompiler.prototype.compile_inline = function (input, ctx, callback) {\r\n        var _this = this;\r\n        try {\r\n            if (input.length === 0) {\r\n                callback(null, '');\r\n                return;\r\n            }\r\n            var blocks = regexp_1.match_inline(input, ctx.inline);\r\n            helpers_1.loop_async(blocks, function (block, i, array, loopCallback) {\r\n                try {\r\n                    if (block.name === common_1.VALUE_NAME_OUTSIDE) {\r\n                        ctx.parts.push(block.value);\r\n                        loopCallback(null, \"this.output += this.parts[\" + (ctx.parts.length - 1) + \"];\");\r\n                        return;\r\n                    }\r\n                    if (block.name === common_1.VALUE_NAME_INSIDE) {\r\n                        var left = block.left;\r\n                        var inside = block;\r\n                        var right = block.right;\r\n                        if (inside.value.trim() === '') {\r\n                            loopCallback(null, '');\r\n                            return;\r\n                        }\r\n                        var compiler = ctx.compiler(left.value + inside.value + right.value);\r\n                        if (!compiler) {\r\n                            inline_1.output_call_helper.call(_this, inside, ctx, loopCallback);\r\n                            return;\r\n                        }\r\n                        compiler.call(_this, inside, ctx, loopCallback);\r\n                        return;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    loopCallback(e);\r\n                }\r\n            }, function (err, results) {\r\n                if (err) {\r\n                    return callback(err);\r\n                }\r\n                callback(null, results.join(''));\r\n            });\r\n        }\r\n        catch (e) {\r\n            callback(e);\r\n        }\r\n    };\r\n    return AtatCompiler;\r\n}());\r\nexports.AtatCompiler = AtatCompiler;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar helpers_1 = require(\"./helpers\");\r\nvar inline_1 = require(\"./inline\");\r\nvar options_1 = require(\"./options\");\r\nvar regexp_1 = require(\"./regexp\");\r\nvar tags_1 = require(\"./tags\");\r\nvar AtatContext = /** @class */ (function () {\r\n    function AtatContext(opts) {\r\n        var _this = this;\r\n        this.options = helpers_1.merge(options_1.DEFAULT_OPTIONS, opts);\r\n        this.helpers = helpers_1.merge(helpers_1.helpers, opts.helpers);\r\n        this.model = null;\r\n        this.output = '';\r\n        this.parts = [];\r\n        this.parent = null;\r\n        this.arguments = [this.options.it, this.options.$, 'body'].join(',');\r\n        this.tags = helpers_1.get_tags(tags_1.tags);\r\n        this.inline = helpers_1.get_tags_inline(inline_1.inlineTags);\r\n        helpers_1.loop(inline_1.inlineTags, function (compiler, regexp) {\r\n            _this.tags.compilers.push({\r\n                compiler: compiler,\r\n                regexp: new RegExp(regexp, 'g'),\r\n            });\r\n        });\r\n        this.layout = null;\r\n        this.partials = [];\r\n        this.sections = {};\r\n    }\r\n    AtatContext.prototype.section = function (name) {\r\n        return name\r\n            ? this.sections[name] || (this.parent && this.parent.section(name))\r\n            : null;\r\n    };\r\n    AtatContext.prototype.compiler = function (str) {\r\n        if (str === void 0) { str = ''; }\r\n        for (var i = 0, l = this.tags.compilers.length; i < l; i += 1) {\r\n            var item = this.tags.compilers[i];\r\n            if (regexp_1.regexp_test(str, item.regexp)) {\r\n                return item.compiler;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    return AtatContext;\r\n}());\r\nexports.AtatContext = AtatContext;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar atat_1 = require(\"./atat\");\r\nvar common_1 = require(\"./common\");\r\nvar helpers_1 = require(\"./helpers\");\r\nvar regexp_1 = require(\"./regexp\");\r\nexports.tags = {\r\n    '@\\\\{': compile_code,\r\n    '@for\\\\s*\\\\(': compile_for,\r\n    '@function\\\\s+[$A-Za-z0-9]*\\\\s*\\\\(': compile_function,\r\n    '@if\\\\s*\\\\(': compile_if,\r\n    '@section\\\\s+[$A-Za-z0-9]*\\\\s*\\\\{': compile_section,\r\n    '@while\\\\s*\\\\(': compile_while,\r\n};\r\nfunction compile_code(inside, ctx, callback) {\r\n    callback(null, inside.value.trim());\r\n}\r\nfunction compile_for(inside, ctx, callback) {\r\n    var code = \"for(\" + inside.value + \"}\";\r\n    var blocks = regexp_1.match_recursive(code, /\\{/g, /\\}/g);\r\n    var out = '';\r\n    out += blocks[0].value;\r\n    out += '{';\r\n    this.compile(blocks[1].value, ctx, function (err, res) {\r\n        if (err) {\r\n            return callback(err);\r\n        }\r\n        out += res;\r\n        out += '}';\r\n        callback(null, out);\r\n    });\r\n}\r\nfunction compile_function(inside, ctx, callback) {\r\n    var left = inside.left.value.trim().substring(1);\r\n    callback(null, \"\" + left + inside.value.trim() + \"}\");\r\n}\r\nfunction compile_if(inside, ctx, callback) {\r\n    var _this = this;\r\n    var code = \"if(\" + inside.value + \"}\";\r\n    var blocks = regexp_1.match_recursive(code, /\\{/g, /\\}/g);\r\n    helpers_1.loop_async(blocks, function (block, i, array, loopCallback) {\r\n        if (block.name === common_1.VALUE_NAME_OUTSIDE) {\r\n            return loopCallback(null, block.value);\r\n        }\r\n        _this.compile(block.value, ctx, loopCallback);\r\n    }, function (err, results) {\r\n        if (err) {\r\n            return callback(err);\r\n        }\r\n        callback(null, results.join(''));\r\n    });\r\n}\r\nfunction compile_section(inside, ctx, callback) {\r\n    var block = inside.value.trim();\r\n    var value = inside.left.value.trim();\r\n    var regName = /^@section\\s+([A-Za-z0-9]+)\\s*\\{/g;\r\n    var match = regexp_1.regexp_exec(value, regName);\r\n    if (!match || match.length > 2) {\r\n        return callback(new Error('Section parsing error'));\r\n    }\r\n    var name = match[1].trim();\r\n    if (ctx.sections[name]) {\r\n        return callback(new Error('Section already exists'));\r\n    }\r\n    atat_1.atat.parse(block, ctx.options, function (err, template) {\r\n        if (err) {\r\n            return callback(err);\r\n        }\r\n        template.context.parent = ctx;\r\n        ctx.sections[name] = template;\r\n        callback(null);\r\n    });\r\n}\r\nfunction compile_while(inside, ctx, callback) {\r\n    var code = \"while(\" + inside.value + \"}\";\r\n    var blocks = regexp_1.match_recursive(code, /\\{/g, /\\}/g);\r\n    var out = '';\r\n    out += blocks[0].value;\r\n    out += '{';\r\n    this.compile(blocks[1].value, ctx, function (err, res) {\r\n        if (err) {\r\n            return callback(err);\r\n        }\r\n        out += res;\r\n        out += '}';\r\n        callback(null, out);\r\n    });\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction load_file(path, callback) {\r\n    var request = new XMLHttpRequest();\r\n    request.open('GET', path, true);\r\n    request.onreadystatechange = function () {\r\n        if (this.readyState === 4) {\r\n            if (this.status >= 200 && this.status < 400) {\r\n                callback(null, this.responseText);\r\n            }\r\n            else {\r\n                callback(new Error(\"Not able to load template \\\"\" + path + \"\\\"\"));\r\n            }\r\n        }\r\n    };\r\n    request.send();\r\n    request = null;\r\n}\r\nexports.load_file = load_file;\r\n"],"sourceRoot":""}