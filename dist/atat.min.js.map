{"version":3,"sources":["webpack://atat/webpack/universalModuleDefinition","webpack://atat/webpack/bootstrap","webpack://atat/./src/common.ts","webpack://atat/./src/helpers.ts","webpack://atat/./src/atat.ts","webpack://atat/./src/regexp.ts","webpack://atat/./src/inline.ts","webpack://atat/./src/options.ts","webpack://atat/./src/compiler.ts","webpack://atat/./src/context.ts","webpack://atat/./src/fileResolvers/index.ts","webpack://atat/./src/fileResolvers/DefaultFileResolver.ts","webpack://atat/./src/fileResolvers/FetchFileResolver.ts","webpack://atat/./src/tags.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","m","Object","defineProperty","value","noop","VALUE_NAME_OUTSIDE","VALUE_NAME_INSIDE","HTML_RULES","\"","&","'","/","<",">","CLEAR_TAGS","MATCH_HTML","common_1","loop","array","fn","prototype","toString","call","i","l","length","x","hasOwnProperty","encodeHtml","code","replace","trimString","str","chars","_i","arguments","String","trim","result","indexOf","charAt","substring","jsonStringify","obj","JSON","stringify","joinHelper","separator","Array","join","uppercaseHelper","toUpperCase","lowercaseHelper","toLowerCase","helpers","encode","json","lower","upper","merge","src","dest","getTags","tags","regexps","compiler","regexp","push","compilers","RegExp","close","open","getTagsInline","inlineTags","loopAsync","callback","ready","finished","results","cb","index","err","res","escapeQuotes","resolveUrl","base","relative","stack","split","parts","pop","parts_1","part","compiler_1","context_1","helpers_1","options_1","atat","config","opts","options","DEFAULT_OPTIONS","parse","input","optionsArg","callbackArg","Promise","resolve","reject","ctx","AtatContext","AtatCompiler","compile","output","render","Function","template","model","body","layout","context","e","loadAndParse","path","fileResolver","loadFile","content","loadAndRender","__express","regexpExec","pos","lastIndex","match","exec","global","cleanArray","splice","matchRecursive","left","right","outerStart","innerStart","leftMatch","rightMatch","sticky","openTokens","delimStart","delimEnd","lastOuterEnd","Error","name","slice","start","end","regexpTest","test","matchInline","innerEnd","lastEnd","leftStart","atat_1","(@!\\()([^]*?)(\\)@)","inside","(@\\()([^]*?)(\\)@)","(@layout\\()([^]*?)(\\)@)","parent","(@partial\\()([^]*?)(\\)@)","args_1","uri","shift","partials","(@section\\()([^]*?)(\\)@)","outputCallHelper","name_2","fileResolvers_1","it","$","DefaultFileResolver","inline_1","regexp_1","_this","this","blocks","block","loopCallback","compileInline","inline","tags_1","section","sections","item","DefaultFileResolver_1","default","FetchFileResolver_1","FetchFileResolver","readFile","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","next","rejected","done","then","apply","__generator","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","TypeError","_a","_b","err_1","_c","fetch","text","concat","@\\{","@for\\s*\\(","out","@function\\s+[$A-Za-z0-9]*\\s*\\(","@if\\s*\\(","@section\\s+[$A-Za-z0-9]*\\s*\\{","@while\\s*\\(","c","d","getter","o","enumerable","get","r","toStringTag","mode","__esModule","ns","create","key","bind","object","property","p","s","moduleId","modules"],"mappings":"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","file":"atat.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"atat\"] = factory();\n\telse\n\t\troot[\"atat\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// tslint:disable-next-line: no-empty\r\nfunction noop() { }\r\nexports.noop = noop;\r\nexports.VALUE_NAME_OUTSIDE = 'outside';\r\nexports.VALUE_NAME_INSIDE = 'inside';\r\nexports.HTML_RULES = {\r\n    '\"': '&#34;',\r\n    '&': '&#38;',\r\n    \"'\": '&#39;',\r\n    '/': '&#47;',\r\n    '<': '&#60;',\r\n    '>': '&#62;',\r\n};\r\nexports.CLEAR_TAGS = /[-[\\](){}*+?.,\\\\^$|#\\s]/g;\r\nexports.MATCH_HTML = /&(?!#?\\w+;)|<|>|\"|'|\\//g;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar common_1 = require(\"./common\");\r\nexports.helpers = {\r\n    encode: encodeHtml,\r\n    join: joinHelper,\r\n    json: jsonStringify,\r\n    lower: lowercaseHelper,\r\n    upper: uppercaseHelper,\r\n};\r\nfunction merge(src, dest) {\r\n    if (dest === void 0) { dest = {}; }\r\n    for (var x in src) {\r\n        if (!dest.hasOwnProperty(x) && src.hasOwnProperty(x)) {\r\n            if (typeof src[x] === 'object') {\r\n                dest[x] = merge(src[x]);\r\n            }\r\n            else {\r\n                dest[x] = src[x];\r\n            }\r\n        }\r\n    }\r\n    return dest;\r\n}\r\nexports.merge = merge;\r\nfunction getTags(tags) {\r\n    var regexps = [];\r\n    loop(tags, function (compiler, regexp) {\r\n        if (regexps.indexOf(regexp) === -1) {\r\n            regexps.push(regexp);\r\n        }\r\n    });\r\n    var compilers = [];\r\n    loop(tags, function (compiler, regexp) {\r\n        compilers.push({\r\n            compiler: compiler,\r\n            regexp: new RegExp(regexp, 'g'),\r\n        });\r\n    });\r\n    return {\r\n        compilers: compilers,\r\n        close: /}@/g,\r\n        open: new RegExp(regexps.join('|'), 'g'),\r\n    };\r\n}\r\nexports.getTags = getTags;\r\nfunction getTagsInline(inlineTags) {\r\n    var regexps = [];\r\n    loop(inlineTags, function (compiler, regexp) {\r\n        regexps.push(regexp);\r\n    });\r\n    regexps.push('(@[A-Za-z0-9$]+\\\\()([^]*?)(\\\\)@)');\r\n    return new RegExp(regexps.join('|'), 'g');\r\n}\r\nexports.getTagsInline = getTagsInline;\r\nfunction loop(array, fn) {\r\n    if (Object.prototype.toString.call(array) !== '[object Array]') {\r\n        for (var x in array) {\r\n            if (array.hasOwnProperty(x)) {\r\n                fn(array[x], x, array);\r\n            }\r\n        }\r\n        return;\r\n    }\r\n    for (var i = 0, l = array.length; i < l; i += 1) {\r\n        fn(array[i], i, array);\r\n    }\r\n}\r\nexports.loop = loop;\r\nfunction loopAsync(array, fn, callback) {\r\n    var ready = 0;\r\n    var finished = false;\r\n    var results = [];\r\n    var length = array.length;\r\n    for (var i = 0; i < length; i += 1) {\r\n        fn(array[i], i, array, cb(i));\r\n    }\r\n    function cb(index) {\r\n        return function (err, res) {\r\n            if (finished) {\r\n                return;\r\n            }\r\n            if (err) {\r\n                finished = true;\r\n                callback(err);\r\n                return;\r\n            }\r\n            results[index] = res;\r\n            ready += 1;\r\n            if (ready === length) {\r\n                finished = true;\r\n                callback(null, results);\r\n            }\r\n        };\r\n    }\r\n}\r\nexports.loopAsync = loopAsync;\r\nfunction encodeHtml(code) {\r\n    if (code === void 0) { code = ''; }\r\n    return code.toString().replace(common_1.MATCH_HTML, function (m) {\r\n        return common_1.HTML_RULES[m] || m;\r\n    });\r\n}\r\nexports.encodeHtml = encodeHtml;\r\nfunction trimString(str) {\r\n    var chars = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        chars[_i - 1] = arguments[_i];\r\n    }\r\n    if (chars.length === 0) {\r\n        return String.prototype.trim.call(str);\r\n    }\r\n    var result = str;\r\n    while (chars.indexOf(str.charAt(0)) >= 0) {\r\n        result = str.substring(1);\r\n    }\r\n    while (chars.indexOf(str.charAt(str.length - 1)) >= 0) {\r\n        result = str.substring(0, str.length - 1);\r\n    }\r\n    return result;\r\n}\r\nexports.trimString = trimString;\r\nfunction escapeQuotes(str) {\r\n    return trimString(str)\r\n        .replace(/^\"(.*)\"$/g, '$1')\r\n        .replace(/^'(.*)'$/g, '$1');\r\n}\r\nexports.escapeQuotes = escapeQuotes;\r\nfunction jsonStringify(obj) {\r\n    return JSON.stringify(obj);\r\n}\r\nexports.jsonStringify = jsonStringify;\r\nfunction joinHelper(array, separator) {\r\n    if (array === void 0) { array = []; }\r\n    if (separator === void 0) { separator = ''; }\r\n    return Array.prototype.join.call(array, separator);\r\n}\r\nexports.joinHelper = joinHelper;\r\nfunction uppercaseHelper(str) {\r\n    if (str === void 0) { str = ''; }\r\n    return str.toString().toUpperCase();\r\n}\r\nexports.uppercaseHelper = uppercaseHelper;\r\nfunction lowercaseHelper(str) {\r\n    if (str === void 0) { str = ''; }\r\n    return str.toString().toLowerCase();\r\n}\r\nexports.lowercaseHelper = lowercaseHelper;\r\nfunction resolveUrl(base, relative) {\r\n    var stack = base.split('/');\r\n    var parts = relative.split('/');\r\n    stack.pop();\r\n    for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {\r\n        var part = parts_1[_i];\r\n        if (part === '.') {\r\n            continue;\r\n        }\r\n        if (part === '..') {\r\n            stack.pop();\r\n        }\r\n        else {\r\n            stack.push(part);\r\n        }\r\n    }\r\n    return stack.join('/');\r\n}\r\nexports.resolveUrl = resolveUrl;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar common_1 = require(\"./common\");\r\nvar compiler_1 = require(\"./compiler\");\r\nvar context_1 = require(\"./context\");\r\nvar helpers_1 = require(\"./helpers\");\r\nvar options_1 = require(\"./options\");\r\nexports.atat = {\r\n    config: function (opts) {\r\n        var options = helpers_1.merge(options_1.DEFAULT_OPTIONS, opts);\r\n        for (var x in options) {\r\n            if (options_1.DEFAULT_OPTIONS.hasOwnProperty(x)) {\r\n                options_1.DEFAULT_OPTIONS[x] = options[x];\r\n            }\r\n        }\r\n    },\r\n    parse: function (input, optionsArg, callbackArg) {\r\n        if (optionsArg === void 0) { optionsArg = {}; }\r\n        if (callbackArg === void 0) { callbackArg = common_1.noop; }\r\n        var options = optionsArg;\r\n        var callback = callbackArg;\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = {};\r\n        }\r\n        if (callback === common_1.noop && typeof Promise !== 'undefined') {\r\n            return new Promise(function (resolve, reject) {\r\n                exports.atat.parse(input, options, function (err, result) {\r\n                    err ? reject(err) : resolve(result);\r\n                });\r\n            });\r\n        }\r\n        var ctx = new context_1.AtatContext(options);\r\n        var compiler = new compiler_1.AtatCompiler();\r\n        compiler.compile(input, ctx, function (err, output) {\r\n            if (err) {\r\n                return callback(err);\r\n            }\r\n            // tslint:disable-next-line: no-function-constructor-with-string-args\r\n            var render = new Function(ctx.arguments, output + \";return this.output;\");\r\n            ctx.template = function (model) {\r\n                try {\r\n                    ctx.output = '';\r\n                    ctx.model = model || ctx.model;\r\n                    var body = render.call(ctx, ctx.model, ctx.helpers, ctx.body);\r\n                    if (ctx.layout) {\r\n                        ctx.layout.context.body = body;\r\n                        body = ctx.layout(ctx.model);\r\n                    }\r\n                    return body;\r\n                }\r\n                catch (e) {\r\n                    return e.toString();\r\n                }\r\n            };\r\n            ctx.template.context = ctx;\r\n            callback(null, ctx.template);\r\n        });\r\n    },\r\n    loadAndParse: function (path, optionsArg, callbackArg) {\r\n        if (optionsArg === void 0) { optionsArg = {}; }\r\n        if (callbackArg === void 0) { callbackArg = common_1.noop; }\r\n        var options = optionsArg;\r\n        var callback = callbackArg;\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = {};\r\n        }\r\n        if (callback === common_1.noop && typeof Promise !== 'undefined') {\r\n            return new Promise(function (resolve, reject) {\r\n                exports.atat.loadAndParse(path, options, function (err, result) {\r\n                    err ? reject(err) : resolve(result);\r\n                });\r\n            });\r\n        }\r\n        var fileResolver = options.fileResolver || options_1.DEFAULT_OPTIONS.fileResolver;\r\n        fileResolver.loadFile(path, function (err, content) {\r\n            err ? callback(err) : exports.atat.parse(content, options, callback);\r\n        });\r\n    },\r\n    render: function (input, model, optionsArg, callbackArg) {\r\n        if (model === void 0) { model = {}; }\r\n        if (optionsArg === void 0) { optionsArg = {}; }\r\n        if (callbackArg === void 0) { callbackArg = common_1.noop; }\r\n        var options = optionsArg;\r\n        var callback = callbackArg;\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = {};\r\n        }\r\n        if (callback === common_1.noop && typeof Promise !== 'undefined') {\r\n            return new Promise(function (resolve, reject) {\r\n                exports.atat.render(input, model, options, function (err, result) {\r\n                    err ? reject(err) : resolve(result);\r\n                });\r\n            });\r\n        }\r\n        exports.atat.parse(input, options, function (err, render) {\r\n            err ? callback(err) : callback(null, render(model));\r\n        });\r\n    },\r\n    loadAndRender: function (path, model, optionsArg, callbackArg) {\r\n        if (optionsArg === void 0) { optionsArg = {}; }\r\n        if (callbackArg === void 0) { callbackArg = common_1.noop; }\r\n        var options = optionsArg;\r\n        var callback = callbackArg;\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = {};\r\n        }\r\n        if (callback === common_1.noop && typeof Promise !== 'undefined') {\r\n            return new Promise(function (resolve, reject) {\r\n                exports.atat.loadAndRender(path, model, options, function (err, result) {\r\n                    err ? reject(err) : resolve(result);\r\n                });\r\n            });\r\n        }\r\n        exports.atat.loadAndParse(path, options, function (err, render) {\r\n            err ? callback(err) : callback(null, render(model));\r\n        });\r\n    },\r\n    // tslint:disable-next-line: function-name\r\n    __express: function (path, options, callback) {\r\n        exports.atat.loadAndParse(path, function (err, template) {\r\n            err ? callback(err.toString()) : callback(null, template(options));\r\n        });\r\n    },\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar common_1 = require(\"./common\");\r\nfunction matchRecursive(str, left, right) {\r\n    var global = left.global;\r\n    var sticky = left.sticky;\r\n    var output = [];\r\n    var openTokens = 0;\r\n    var delimStart = 0;\r\n    var delimEnd = 0;\r\n    var lastOuterEnd = 0;\r\n    var outerStart;\r\n    var innerStart;\r\n    var leftMatch;\r\n    var rightMatch;\r\n    while (true) {\r\n        leftMatch = regexpExec(str, left, delimEnd);\r\n        rightMatch = regexpExec(str, right, delimEnd);\r\n        // Keep the leftmost match only\r\n        if (leftMatch && rightMatch) {\r\n            if (leftMatch.index <= rightMatch.index) {\r\n                rightMatch = null;\r\n            }\r\n            else {\r\n                leftMatch = null;\r\n            }\r\n        }\r\n        // Paths (LM: leftMatch, RM: rightMatch, OT: openTokens):\r\n        // LM | RM | OT | Result\r\n        // 1  | 0  | 1  | loop\r\n        // 1  | 0  | 0  | loop\r\n        // 0  | 1  | 1  | loop\r\n        // 0  | 1  | 0  | throw\r\n        // 0  | 0  | 1  | throw\r\n        // 0  | 0  | 0  | break\r\n        // The paths above don't include the sticky mode special case. The loop ends after the\r\n        // first completed match if not `global`.\r\n        if (leftMatch || rightMatch) {\r\n            delimStart = (leftMatch || rightMatch).index;\r\n            delimEnd = delimStart + (leftMatch || rightMatch)[0].length;\r\n        }\r\n        else if (!openTokens) {\r\n            break;\r\n        }\r\n        if (sticky && !openTokens && delimStart > lastOuterEnd) {\r\n            break;\r\n        }\r\n        if (leftMatch) {\r\n            if (!openTokens) {\r\n                outerStart = delimStart;\r\n                innerStart = delimEnd;\r\n            }\r\n            openTokens += 1;\r\n        }\r\n        else if (rightMatch && openTokens) {\r\n            openTokens -= 1;\r\n            if (!openTokens) {\r\n                if (outerStart > lastOuterEnd) {\r\n                    output.push({\r\n                        name: common_1.VALUE_NAME_OUTSIDE,\r\n                        value: str.slice(lastOuterEnd, outerStart),\r\n                        start: lastOuterEnd,\r\n                        end: outerStart,\r\n                    });\r\n                }\r\n                output.push({\r\n                    name: common_1.VALUE_NAME_INSIDE,\r\n                    value: str.slice(innerStart, delimStart),\r\n                    start: innerStart,\r\n                    end: delimStart,\r\n                    left: {\r\n                        value: str.slice(outerStart, innerStart),\r\n                        start: outerStart,\r\n                        end: innerStart,\r\n                    },\r\n                    right: {\r\n                        value: str.slice(delimStart, delimEnd),\r\n                        start: delimStart,\r\n                        end: delimEnd,\r\n                    },\r\n                });\r\n                lastOuterEnd = delimEnd;\r\n                if (!global) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            throw new Error('Unbalanced delimiter found in string');\r\n        }\r\n        // If the delimiter matched an empty string, avoid an infinite loop\r\n        if (delimStart === delimEnd) {\r\n            delimEnd += 1;\r\n        }\r\n    }\r\n    if (global && str.length > lastOuterEnd) {\r\n        output.push({\r\n            end: str.length,\r\n            name: common_1.VALUE_NAME_OUTSIDE,\r\n            start: lastOuterEnd,\r\n            value: str.slice(lastOuterEnd),\r\n        });\r\n    }\r\n    return output;\r\n}\r\nexports.matchRecursive = matchRecursive;\r\nfunction regexpTest(str, regexp, pos) {\r\n    if (pos === void 0) { pos = 0; }\r\n    regexp.lastIndex = pos;\r\n    var test = regexp.test(str);\r\n    if (regexp.global) {\r\n        regexp.lastIndex = test ? regexp.lastIndex : 0;\r\n    }\r\n    return test;\r\n}\r\nexports.regexpTest = regexpTest;\r\nfunction regexpExec(str, regexp, pos) {\r\n    if (pos === void 0) { pos = 0; }\r\n    regexp.lastIndex = pos;\r\n    var match = regexp.exec(str);\r\n    if (regexp.global) {\r\n        regexp.lastIndex = match ? regexp.lastIndex : 0;\r\n    }\r\n    return match;\r\n}\r\nexports.regexpExec = regexpExec;\r\nfunction cleanArray(array) {\r\n    for (var i = 0; i < array.length; i += 1) {\r\n        if (typeof array[i] === 'undefined') {\r\n            array.splice(i, 1);\r\n            i -= 1;\r\n        }\r\n    }\r\n}\r\nexports.cleanArray = cleanArray;\r\nfunction matchInline(str, regexp) {\r\n    var global = regexp.global;\r\n    var sticky = regexp.sticky;\r\n    var output = [];\r\n    var lastEnd = 0;\r\n    var leftStart = 0;\r\n    var innerStart;\r\n    var innerEnd;\r\n    while (true) {\r\n        var match = regexpExec(str, regexp, lastEnd);\r\n        if (match === null) {\r\n            break;\r\n        }\r\n        leftStart = match.index;\r\n        if (sticky && leftStart > lastEnd) {\r\n            break;\r\n        }\r\n        cleanArray(match);\r\n        innerStart = leftStart + match[1].length;\r\n        innerEnd = lastEnd + innerStart + match[2].length;\r\n        if (leftStart > lastEnd) {\r\n            output.push({\r\n                name: common_1.VALUE_NAME_OUTSIDE,\r\n                value: str.slice(lastEnd, leftStart),\r\n                start: lastEnd,\r\n                end: leftStart,\r\n            });\r\n        }\r\n        output.push({\r\n            name: common_1.VALUE_NAME_INSIDE,\r\n            value: match[2],\r\n            start: innerStart,\r\n            end: innerEnd,\r\n            left: {\r\n                value: match[1],\r\n                start: leftStart,\r\n                end: innerStart,\r\n            },\r\n            right: {\r\n                value: match[3],\r\n                start: innerEnd,\r\n                end: innerEnd + match[3].length,\r\n            },\r\n        });\r\n        lastEnd = leftStart + match[0].length;\r\n        if (!global) {\r\n            break;\r\n        }\r\n    }\r\n    if (global && str.length > lastEnd) {\r\n        output.push({\r\n            name: common_1.VALUE_NAME_OUTSIDE,\r\n            value: str.slice(lastEnd),\r\n            start: lastEnd,\r\n            end: str.length,\r\n        });\r\n    }\r\n    return output;\r\n}\r\nexports.matchInline = matchInline;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar atat_1 = require(\"./atat\");\r\nvar helpers_1 = require(\"./helpers\");\r\nexports.inlineTags = {\r\n    '(@!\\\\()([^]*?)(\\\\)@)': outputAsHtml,\r\n    '(@\\\\()([^]*?)(\\\\)@)': outputAsText,\r\n    '(@layout\\\\()([^]*?)(\\\\)@)': compileLayout,\r\n    '(@partial\\\\()([^]*?)(\\\\)@)': compilePartial,\r\n    '(@section\\\\()([^]*?)(\\\\)@)': outputSection,\r\n};\r\nfunction outputAsText(inside, ctx, callback) {\r\n    try {\r\n        var val = inside.value.trim();\r\n        if (val === '') {\r\n            callback();\r\n        }\r\n        callback(null, \"this.output += this.helpers.encode(\" + inside.value.trim() + \");\");\r\n    }\r\n    catch (e) {\r\n        callback(e);\r\n    }\r\n}\r\nfunction outputAsHtml(inside, ctx, callback) {\r\n    try {\r\n        var val = inside.value.trim();\r\n        if (val === '') {\r\n            callback();\r\n        }\r\n        callback(null, \"this.output += (\" + inside.value.trim() + \");\");\r\n    }\r\n    catch (e) {\r\n        callback(e);\r\n    }\r\n}\r\nfunction compileLayout(inside, ctx, callback) {\r\n    try {\r\n        if (ctx.layout) {\r\n            return callback();\r\n        }\r\n        atat_1.atat.loadAndParse(helpers_1.escapeQuotes(inside.value), ctx.options, function (err, template) {\r\n            if (err) {\r\n                return callback(err);\r\n            }\r\n            ctx.layout = template;\r\n            template.context.parent = ctx;\r\n            callback();\r\n        });\r\n    }\r\n    catch (e) {\r\n        callback(e);\r\n    }\r\n}\r\nfunction compilePartial(inside, ctx, callback) {\r\n    try {\r\n        var value = inside.value.trim();\r\n        if (value === '') {\r\n            return callback(new Error('Partial parsing error'));\r\n        }\r\n        var args_1 = value.split(/\\s*,\\s*/g);\r\n        var uri = helpers_1.escapeQuotes(args_1.shift());\r\n        atat_1.atat.loadAndParse(uri, ctx.options, function (err, template) {\r\n            if (err) {\r\n                return callback(err);\r\n            }\r\n            ctx.partials.push(template);\r\n            template.context.parent = ctx;\r\n            var output = \"this.output += this.partials[\" + (ctx.partials.length -\r\n                1) + \"](\" + args_1 + \");\";\r\n            callback(null, output);\r\n        });\r\n    }\r\n    catch (e) {\r\n        callback(e);\r\n    }\r\n}\r\nfunction outputSection(inside, ctx, callback) {\r\n    try {\r\n        var name_1 = helpers_1.escapeQuotes(inside.value);\r\n        var output = \"this.output += (function(){var s = this.section('\" + name_1 + \"'); \" +\r\n            (\"return s?s(\" + ctx.arguments + \"):\\\"\\\";}).call(this);\");\r\n        callback(null, output);\r\n    }\r\n    catch (e) {\r\n        callback(e);\r\n    }\r\n}\r\nfunction outputCallHelper(inside, ctx, callback) {\r\n    try {\r\n        var name_2 = inside.left.value.substring(1, inside.left.value.length - 1);\r\n        if (typeof ctx.helpers[name_2] !== 'function') {\r\n            throw new Error(\"Helper \" + name_2 + \" isn't declarated\");\r\n        }\r\n        callback(null, \"this.output += this.helpers.\" + name_2 + \"(\" + inside.value.trim() + \");\");\r\n    }\r\n    catch (e) {\r\n        callback(e);\r\n    }\r\n}\r\nexports.outputCallHelper = outputCallHelper;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar fileResolvers_1 = require(\"./fileResolvers\");\r\nexports.DEFAULT_OPTIONS = {\r\n    it: 'it',\r\n    $: '$',\r\n    helpers: {},\r\n    fileResolver: new fileResolvers_1.DefaultFileResolver(),\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar common_1 = require(\"./common\");\r\nvar helpers_1 = require(\"./helpers\");\r\nvar inline_1 = require(\"./inline\");\r\nvar regexp_1 = require(\"./regexp\");\r\nvar AtatCompiler = /** @class */ (function () {\r\n    function AtatCompiler() {\r\n    }\r\n    AtatCompiler.prototype.compile = function (input, ctx, callback) {\r\n        var _this = this;\r\n        try {\r\n            if (input.length === 0) {\r\n                callback(null, '');\r\n                return;\r\n            }\r\n            var blocks = regexp_1.matchRecursive(input, ctx.tags.open, ctx.tags.close);\r\n            helpers_1.loopAsync(blocks, function (block, i, array, loopCallback) {\r\n                try {\r\n                    if (block.name === common_1.VALUE_NAME_OUTSIDE) {\r\n                        if (block.value.trim() === '') {\r\n                            loopCallback(null, '');\r\n                            return;\r\n                        }\r\n                        _this.compileInline(block.value, ctx, loopCallback);\r\n                        return;\r\n                    }\r\n                    if (block.name === common_1.VALUE_NAME_INSIDE) {\r\n                        var left = block.left;\r\n                        var inside = block;\r\n                        var right = block.right;\r\n                        var compiler = ctx.compiler(left.value);\r\n                        if (!compiler) {\r\n                            _this.compileInline(left.value + inside.value + right.value, ctx, loopCallback);\r\n                            return;\r\n                        }\r\n                        compiler.call(_this, inside, ctx, loopCallback);\r\n                        return;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    loopCallback(e);\r\n                }\r\n            }, function (err, results) {\r\n                if (err) {\r\n                    return callback(err);\r\n                }\r\n                callback(null, results.join(''));\r\n            });\r\n        }\r\n        catch (e) {\r\n            callback(e);\r\n        }\r\n    };\r\n    AtatCompiler.prototype.compileInline = function (input, ctx, callback) {\r\n        var _this = this;\r\n        try {\r\n            if (input.length === 0) {\r\n                callback(null, '');\r\n                return;\r\n            }\r\n            var blocks = regexp_1.matchInline(input, ctx.inline);\r\n            helpers_1.loopAsync(blocks, function (block, i, array, loopCallback) {\r\n                try {\r\n                    if (block.name === common_1.VALUE_NAME_OUTSIDE) {\r\n                        ctx.parts.push(block.value);\r\n                        loopCallback(null, \"this.output += this.parts[\" + (ctx.parts.length - 1) + \"];\");\r\n                        return;\r\n                    }\r\n                    if (block.name === common_1.VALUE_NAME_INSIDE) {\r\n                        var left = block.left;\r\n                        var inside = block;\r\n                        var right = block.right;\r\n                        if (inside.value.trim() === '') {\r\n                            loopCallback(null, '');\r\n                            return;\r\n                        }\r\n                        var compiler = ctx.compiler(left.value + inside.value + right.value);\r\n                        if (!compiler) {\r\n                            inline_1.outputCallHelper.call(_this, inside, ctx, loopCallback);\r\n                            return;\r\n                        }\r\n                        compiler.call(_this, inside, ctx, loopCallback);\r\n                        return;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    loopCallback(e);\r\n                }\r\n            }, function (err, results) {\r\n                if (err) {\r\n                    return callback(err);\r\n                }\r\n                callback(null, results.join(''));\r\n            });\r\n        }\r\n        catch (e) {\r\n            callback(e);\r\n        }\r\n    };\r\n    return AtatCompiler;\r\n}());\r\nexports.AtatCompiler = AtatCompiler;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar helpers_1 = require(\"./helpers\");\r\nvar inline_1 = require(\"./inline\");\r\nvar options_1 = require(\"./options\");\r\nvar regexp_1 = require(\"./regexp\");\r\nvar tags_1 = require(\"./tags\");\r\nvar AtatContext = /** @class */ (function () {\r\n    function AtatContext(opts) {\r\n        var _this = this;\r\n        this.options = helpers_1.merge(options_1.DEFAULT_OPTIONS, opts);\r\n        this.helpers = helpers_1.merge(helpers_1.helpers, opts.helpers);\r\n        this.model = null;\r\n        this.output = '';\r\n        this.parts = [];\r\n        this.parent = null;\r\n        this.arguments = [this.options.it, this.options.$, 'body'].join(',');\r\n        this.tags = helpers_1.getTags(tags_1.tags);\r\n        this.inline = helpers_1.getTagsInline(inline_1.inlineTags);\r\n        helpers_1.loop(inline_1.inlineTags, function (compiler, regexp) {\r\n            _this.tags.compilers.push({\r\n                compiler: compiler,\r\n                regexp: new RegExp(regexp, 'g'),\r\n            });\r\n        });\r\n        this.layout = null;\r\n        this.partials = [];\r\n        this.sections = {};\r\n    }\r\n    AtatContext.prototype.section = function (name) {\r\n        return name\r\n            ? this.sections[name] || (this.parent && this.parent.section(name))\r\n            : null;\r\n    };\r\n    AtatContext.prototype.compiler = function (str) {\r\n        if (str === void 0) { str = ''; }\r\n        for (var i = 0, l = this.tags.compilers.length; i < l; i += 1) {\r\n            var item = this.tags.compilers[i];\r\n            if (regexp_1.regexpTest(str, item.regexp)) {\r\n                return item.compiler;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    return AtatContext;\r\n}());\r\nexports.AtatContext = AtatContext;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DefaultFileResolver_1 = require(\"./DefaultFileResolver\");\r\nexports.DefaultFileResolver = DefaultFileResolver_1.default;\r\nvar FetchFileResolver_1 = require(\"./FetchFileResolver\");\r\nexports.FetchFileResolver = FetchFileResolver_1.default;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DefaultFileResolver = /** @class */ (function () {\r\n    function DefaultFileResolver() {\r\n    }\r\n    DefaultFileResolver.prototype.loadFile = function (path, callback) {\r\n        try {\r\n            var fs = require('fs');\r\n            fs.readFile(path, 'utf-8', callback);\r\n        }\r\n        catch (err) {\r\n            callback(err);\r\n        }\r\n    };\r\n    return DefaultFileResolver;\r\n}());\r\nexports.default = DefaultFileResolver;\r\n","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar FetchFileResolver = /** @class */ (function () {\r\n    function FetchFileResolver() {\r\n    }\r\n    FetchFileResolver.prototype.loadFile = function (path, callback) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var res, _a, _b, err_1;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        _c.trys.push([0, 3, , 4]);\r\n                        return [4 /*yield*/, fetch(path)];\r\n                    case 1:\r\n                        res = _c.sent();\r\n                        _a = callback;\r\n                        _b = [null];\r\n                        return [4 /*yield*/, res.text()];\r\n                    case 2:\r\n                        _a.apply(void 0, _b.concat([_c.sent()]));\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        err_1 = _c.sent();\r\n                        callback(err_1);\r\n                        return [3 /*break*/, 4];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return FetchFileResolver;\r\n}());\r\nexports.default = FetchFileResolver;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar atat_1 = require(\"./atat\");\r\nvar common_1 = require(\"./common\");\r\nvar helpers_1 = require(\"./helpers\");\r\nvar regexp_1 = require(\"./regexp\");\r\nexports.tags = {\r\n    '@\\\\{': compileCode,\r\n    '@for\\\\s*\\\\(': compileFor,\r\n    '@function\\\\s+[$A-Za-z0-9]*\\\\s*\\\\(': compileFunction,\r\n    '@if\\\\s*\\\\(': compileIf,\r\n    '@section\\\\s+[$A-Za-z0-9]*\\\\s*\\\\{': compileSection,\r\n    '@while\\\\s*\\\\(': compileWhile,\r\n};\r\nfunction compileCode(inside, ctx, callback) {\r\n    callback(null, inside.value.trim());\r\n}\r\nfunction compileFor(inside, ctx, callback) {\r\n    var code = \"for(\" + inside.value + \"}\";\r\n    var blocks = regexp_1.matchRecursive(code, /\\{/g, /\\}/g);\r\n    var out = '';\r\n    out += blocks[0].value;\r\n    out += '{';\r\n    this.compile(blocks[1].value, ctx, function (err, res) {\r\n        if (err) {\r\n            return callback(err);\r\n        }\r\n        out += res;\r\n        out += '}';\r\n        callback(null, out);\r\n    });\r\n}\r\nfunction compileFunction(inside, ctx, callback) {\r\n    var left = inside.left.value.trim().substring(1);\r\n    callback(null, \"\" + left + inside.value.trim() + \"}\");\r\n}\r\nfunction compileIf(inside, ctx, callback) {\r\n    var _this = this;\r\n    var code = \"if(\" + inside.value + \"}\";\r\n    var blocks = regexp_1.matchRecursive(code, /\\{/g, /\\}/g);\r\n    helpers_1.loopAsync(blocks, function (block, i, array, loopCallback) {\r\n        if (block.name === common_1.VALUE_NAME_OUTSIDE) {\r\n            return loopCallback(null, block.value);\r\n        }\r\n        _this.compile(block.value, ctx, loopCallback);\r\n    }, function (err, results) {\r\n        if (err) {\r\n            return callback(err);\r\n        }\r\n        callback(null, results.join(''));\r\n    });\r\n}\r\nfunction compileSection(inside, ctx, callback) {\r\n    var block = inside.value.trim();\r\n    var value = inside.left.value.trim();\r\n    var regName = /^@section\\s+([A-Za-z0-9]+)\\s*\\{/g;\r\n    var match = regexp_1.regexpExec(value, regName);\r\n    if (!match || match.length > 2) {\r\n        return callback(new Error('Section parsing error'));\r\n    }\r\n    var name = match[1].trim();\r\n    if (ctx.sections[name]) {\r\n        return callback(new Error('Section already exists'));\r\n    }\r\n    atat_1.atat.parse(block, ctx.options, function (err, template) {\r\n        if (err) {\r\n            return callback(err);\r\n        }\r\n        template.context.parent = ctx;\r\n        ctx.sections[name] = template;\r\n        callback(null);\r\n    });\r\n}\r\nfunction compileWhile(inside, ctx, callback) {\r\n    var code = \"while(\" + inside.value + \"}\";\r\n    var blocks = regexp_1.matchRecursive(code, /\\{/g, /\\}/g);\r\n    var out = '';\r\n    out += blocks[0].value;\r\n    out += '{';\r\n    this.compile(blocks[1].value, ctx, function (err, res) {\r\n        if (err) {\r\n            return callback(err);\r\n        }\r\n        out += res;\r\n        out += '}';\r\n        callback(null, out);\r\n    });\r\n}\r\n"],"sourceRoot":""}