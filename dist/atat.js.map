{"version":3,"sources":["webpack://atat/webpack/universalModuleDefinition","webpack://atat/webpack/bootstrap","webpack://atat/./src/common.ts","webpack://atat/./src/helpers.ts","webpack://atat/./src/regexp.ts","webpack://atat/./src/atat.ts","webpack://atat/./src/inline.ts","webpack://atat/./src/load_file.ts","webpack://atat/./src/compiler.ts","webpack://atat/./src/tags.ts","webpack://atat/./src/options.ts","webpack://atat/./src/context.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;ACnEA;AACA,8CAA8C,cAAc;AAC5D,iBAAiB;AACjB;AACA;AACA;AACA,sBAAsB,YAAY,cAAc,cAAc,cAAc,cAAc,cAAc;AACxG,+BAA+B;AAC/B,gCAAgC;;;;;;;;ACRhC;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,OAAO;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,WAAW;AACrC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,YAAY;AACvC,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,yBAAyB,UAAU;AACnC;AACA;AACA;AACA;AACA,yBAAyB,UAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChKA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,yBAAyB,SAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,SAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;;;;;;ACjLA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC,kCAAkC,0BAA0B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,8BAA8B,WAAW;AACzC,kCAAkC,0BAA0B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,mBAAmB;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;;;;;;AC9DA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAwF;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0GAA0G;AAC1G;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,uCAAuC,yCAAyC,aAAa;AAC9I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gGAAgG;AAChG;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjGA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnBA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kGAAkG;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AC1FA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,mDAAmD,OAAO;AAC1D;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,KAAK;AACL;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA,wCAAwC;AACxC,mDAAmD,OAAO;AAC1D;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,2CAA2C;AAC3C,mDAAmD,OAAO;AAC1D;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,KAAK;AACL;;;;;;;;ACvFA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,UAAU;AACvC,uDAAuD,OAAO;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD","file":"atat.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"atat\"] = factory();\n\telse\n\t\troot[\"atat\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction noop() { }\r\nexports.noop = noop;\r\nexports.VALUE_NAME_OUTSIDE = 'outside';\r\nexports.VALUE_NAME_INSIDE = 'inside';\r\nexports.HTML_RULES = { '&': '&#38;', '<': '&#60;', '>': '&#62;', '\"': '&#34;', \"'\": '&#39;', '/': '&#47;' };\r\nexports.CLEAR_TAGS = /[-[\\](){}*+?.,\\\\^$|#\\s]/g;\r\nexports.MATCH_HTML = /&(?!#?\\w+;)|<|>|\"|'|\\//g;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar common_1 = require(\"./common\");\r\nexports.helpers = {\r\n    encode: encode_html,\r\n    json: json_stringify,\r\n    join: join_helper,\r\n    upper: uppercase_helper,\r\n    lower: lowercase_helper\r\n};\r\nfunction merge(src, dest) {\r\n    if (dest === void 0) { dest = {}; }\r\n    for (var x in src) {\r\n        if (!dest.hasOwnProperty(x) && src.hasOwnProperty(x)) {\r\n            if (typeof src[x] == 'object') {\r\n                dest[x] = merge(src[x]);\r\n            }\r\n            else {\r\n                dest[x] = src[x];\r\n            }\r\n        }\r\n    }\r\n    return dest;\r\n}\r\nexports.merge = merge;\r\nfunction get_tags(tags) {\r\n    var regexps = [];\r\n    loop(tags, function (compiler, regexp) {\r\n        if (regexps.indexOf(regexp) === -1) {\r\n            regexps.push(regexp);\r\n        }\r\n    });\r\n    var compilers = [];\r\n    loop(tags, function (compiler, regexp) {\r\n        compilers.push({\r\n            compiler: compiler,\r\n            regexp: new RegExp(regexp, 'g')\r\n        });\r\n    });\r\n    return {\r\n        open: new RegExp(regexps.join('|'), 'g'),\r\n        close: /}@/g,\r\n        compilers: compilers\r\n    };\r\n}\r\nexports.get_tags = get_tags;\r\nfunction get_tags_inline(inline_tags) {\r\n    var regexps = [];\r\n    loop(inline_tags, function (compiler, regexp) {\r\n        regexps.push(regexp);\r\n    });\r\n    regexps.push('(@[A-Za-z0-9$]+\\\\()([^]*?)(\\\\)@)');\r\n    return new RegExp(regexps.join('|'), 'g');\r\n}\r\nexports.get_tags_inline = get_tags_inline;\r\nfunction loop(array, fn) {\r\n    if (Object.prototype.toString.call(array) !== '[object Array]') {\r\n        array = array;\r\n        for (var x in array) {\r\n            if (array.hasOwnProperty(x)) {\r\n                fn(array[x], x, array);\r\n            }\r\n        }\r\n        return;\r\n    }\r\n    array = array;\r\n    for (var i = 0, l = array.length; i < l; i++) {\r\n        fn(array[i], i, array);\r\n    }\r\n}\r\nexports.loop = loop;\r\nfunction loop_async(array, fn, callback) {\r\n    var ready = 0, finished = false, results = [], length = array.length;\r\n    for (var i = 0; i < length; i++) {\r\n        fn(array[i], i, array, cb(i));\r\n    }\r\n    function cb(index) {\r\n        return function (err, res) {\r\n            if (finished) {\r\n                return;\r\n            }\r\n            if (err) {\r\n                finished = true;\r\n                callback(err);\r\n                return;\r\n            }\r\n            results[index] = res;\r\n            ready++;\r\n            if (ready == length) {\r\n                finished = true;\r\n                callback(null, results);\r\n            }\r\n        };\r\n    }\r\n}\r\nexports.loop_async = loop_async;\r\nfunction encode_html(code) {\r\n    if (code === void 0) { code = ''; }\r\n    return code.toString().replace(common_1.MATCH_HTML, function (m) {\r\n        return common_1.HTML_RULES[m] || m;\r\n    });\r\n}\r\nexports.encode_html = encode_html;\r\nfunction trim_string(str) {\r\n    var chars = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        chars[_i - 1] = arguments[_i];\r\n    }\r\n    if (chars.length == 0) {\r\n        return String.prototype.trim.call(str);\r\n    }\r\n    while (chars.indexOf(str.charAt(0)) >= 0) {\r\n        str = str.substring(1);\r\n    }\r\n    while (chars.indexOf(str.charAt(str.length - 1)) >= 0) {\r\n        str = str.substring(0, str.length - 1);\r\n    }\r\n    return str;\r\n}\r\nexports.trim_string = trim_string;\r\nfunction escape_quotes(str) {\r\n    return trim_string(str).replace(/^\"(.*)\"$/g, '$1').replace(/^'(.*)'$/g, '$1');\r\n}\r\nexports.escape_quotes = escape_quotes;\r\nfunction json_stringify(obj) {\r\n    return JSON.stringify(obj);\r\n}\r\nexports.json_stringify = json_stringify;\r\nfunction join_helper(array, separator) {\r\n    if (array === void 0) { array = []; }\r\n    if (separator === void 0) { separator = ''; }\r\n    return Array.prototype.join.call(array, separator);\r\n}\r\nexports.join_helper = join_helper;\r\nfunction uppercase_helper(str) {\r\n    if (str === void 0) { str = ''; }\r\n    return str.toString().toUpperCase();\r\n}\r\nexports.uppercase_helper = uppercase_helper;\r\nfunction lowercase_helper(str) {\r\n    if (str === void 0) { str = ''; }\r\n    return str.toString().toLowerCase();\r\n}\r\nexports.lowercase_helper = lowercase_helper;\r\nfunction resolveUrl(base, relative) {\r\n    var stack = base.split(\"/\"), parts = relative.split(\"/\");\r\n    stack.pop();\r\n    for (var i = 0; i < parts.length; i++) {\r\n        if (parts[i] == \".\") {\r\n            continue;\r\n        }\r\n        if (parts[i] == \"..\") {\r\n            stack.pop();\r\n        }\r\n        else {\r\n            stack.push(parts[i]);\r\n        }\r\n    }\r\n    return stack.join(\"/\");\r\n}\r\nexports.resolveUrl = resolveUrl;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar common_1 = require(\"./common\");\r\nfunction match_recursive(str, left, right) {\r\n    var global = left.global, sticky = left.sticky, output = [], openTokens = 0, delimStart = 0, delimEnd = 0, lastOuterEnd = 0, outerStart, innerStart, leftMatch, rightMatch;\r\n    while (true) {\r\n        leftMatch = regexp_exec(str, left, delimEnd);\r\n        rightMatch = regexp_exec(str, right, delimEnd);\r\n        // Keep the leftmost match only\r\n        if (leftMatch && rightMatch) {\r\n            if (leftMatch.index <= rightMatch.index) {\r\n                rightMatch = null;\r\n            }\r\n            else {\r\n                leftMatch = null;\r\n            }\r\n        }\r\n        // Paths (LM: leftMatch, RM: rightMatch, OT: openTokens):\r\n        // LM | RM | OT | Result\r\n        // 1  | 0  | 1  | loop\r\n        // 1  | 0  | 0  | loop\r\n        // 0  | 1  | 1  | loop\r\n        // 0  | 1  | 0  | throw\r\n        // 0  | 0  | 1  | throw\r\n        // 0  | 0  | 0  | break\r\n        // The paths above don't include the sticky mode special case. The loop ends after the\r\n        // first completed match if not `global`.\r\n        if (leftMatch || rightMatch) {\r\n            delimStart = (leftMatch || rightMatch).index;\r\n            delimEnd = delimStart + (leftMatch || rightMatch)[0].length;\r\n        }\r\n        else if (!openTokens) {\r\n            break;\r\n        }\r\n        if (sticky && !openTokens && delimStart > lastOuterEnd) {\r\n            break;\r\n        }\r\n        if (leftMatch) {\r\n            if (!openTokens) {\r\n                outerStart = delimStart;\r\n                innerStart = delimEnd;\r\n            }\r\n            ++openTokens;\r\n        }\r\n        else if (rightMatch && openTokens) {\r\n            if (!--openTokens) {\r\n                if (outerStart > lastOuterEnd) {\r\n                    output.push({\r\n                        name: common_1.VALUE_NAME_OUTSIDE,\r\n                        value: str.slice(lastOuterEnd, outerStart),\r\n                        start: lastOuterEnd,\r\n                        end: outerStart\r\n                    });\r\n                }\r\n                output.push({\r\n                    name: common_1.VALUE_NAME_INSIDE,\r\n                    value: str.slice(innerStart, delimStart),\r\n                    start: innerStart,\r\n                    end: delimStart,\r\n                    left: {\r\n                        value: str.slice(outerStart, innerStart),\r\n                        start: outerStart,\r\n                        end: innerStart\r\n                    },\r\n                    right: {\r\n                        value: str.slice(delimStart, delimEnd),\r\n                        start: delimStart,\r\n                        end: delimEnd\r\n                    }\r\n                });\r\n                lastOuterEnd = delimEnd;\r\n                if (!global) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            throw new Error('Unbalanced delimiter found in string');\r\n        }\r\n        // If the delimiter matched an empty string, avoid an infinite loop\r\n        if (delimStart === delimEnd) {\r\n            ++delimEnd;\r\n        }\r\n    }\r\n    if (global && str.length > lastOuterEnd) {\r\n        output.push({\r\n            name: common_1.VALUE_NAME_OUTSIDE,\r\n            value: str.slice(lastOuterEnd),\r\n            start: lastOuterEnd,\r\n            end: str.length\r\n        });\r\n    }\r\n    return output;\r\n}\r\nexports.match_recursive = match_recursive;\r\nfunction regexp_test(str, regexp, pos) {\r\n    if (pos === void 0) { pos = 0; }\r\n    regexp.lastIndex = pos;\r\n    var test = regexp.test(str);\r\n    if (regexp.global) {\r\n        regexp.lastIndex = test ? regexp.lastIndex : 0;\r\n    }\r\n    return test;\r\n}\r\nexports.regexp_test = regexp_test;\r\nfunction regexp_exec(str, regexp, pos) {\r\n    if (pos === void 0) { pos = 0; }\r\n    regexp.lastIndex = pos;\r\n    var match = regexp.exec(str);\r\n    if (regexp.global) {\r\n        regexp.lastIndex = match ? regexp.lastIndex : 0;\r\n    }\r\n    return match;\r\n}\r\nexports.regexp_exec = regexp_exec;\r\nfunction clean_array(array) {\r\n    for (var i = 0; i < array.length; i++) {\r\n        if (typeof array[i] === 'undefined') {\r\n            array.splice(i, 1);\r\n            i--;\r\n        }\r\n    }\r\n}\r\nexports.clean_array = clean_array;\r\nfunction match_inline(str, regexp) {\r\n    var global = regexp.global, sticky = regexp.sticky, output = [], lastEnd = 0, leftStart = 0, innerStart, innerEnd;\r\n    while (true) {\r\n        var match = regexp_exec(str, regexp, lastEnd);\r\n        if (match == null) {\r\n            break;\r\n        }\r\n        leftStart = match.index;\r\n        if (sticky && leftStart > lastEnd) {\r\n            break;\r\n        }\r\n        clean_array(match);\r\n        innerStart = leftStart + match[1].length;\r\n        innerEnd = lastEnd + innerStart + match[2].length;\r\n        if (leftStart > lastEnd) {\r\n            output.push({\r\n                name: common_1.VALUE_NAME_OUTSIDE,\r\n                value: str.slice(lastEnd, leftStart),\r\n                start: lastEnd,\r\n                end: leftStart\r\n            });\r\n        }\r\n        output.push({\r\n            name: common_1.VALUE_NAME_INSIDE,\r\n            value: match[2],\r\n            start: innerStart,\r\n            end: innerEnd,\r\n            left: {\r\n                value: match[1],\r\n                start: leftStart,\r\n                end: innerStart\r\n            },\r\n            right: {\r\n                value: match[3],\r\n                start: innerEnd,\r\n                end: innerEnd + match[3].length\r\n            }\r\n        });\r\n        lastEnd = leftStart + match[0].length;\r\n        if (!global) {\r\n            break;\r\n        }\r\n    }\r\n    if (global && str.length > lastEnd) {\r\n        output.push({\r\n            name: common_1.VALUE_NAME_OUTSIDE,\r\n            value: str.slice(lastEnd),\r\n            start: lastEnd,\r\n            end: str.length\r\n        });\r\n    }\r\n    return output;\r\n}\r\nexports.match_inline = match_inline;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar context_1 = require(\"./context\");\r\nvar compiler_1 = require(\"./compiler\");\r\nvar common_1 = require(\"./common\");\r\nvar load_file_1 = require(\"./load_file\");\r\nexports.atat = {\r\n    compileByPath: function (path, opts, callback) {\r\n        if (opts === void 0) { opts = {}; }\r\n        if (callback === void 0) { callback = common_1.noop; }\r\n        if (typeof opts === 'function') {\r\n            callback = opts;\r\n            opts = {};\r\n        }\r\n        load_file_1.load_file(path, function (err, content) {\r\n            if (err) {\r\n                return callback(err);\r\n            }\r\n            exports.atat.compile(content, opts, callback);\r\n        });\r\n    },\r\n    compile: function (input, opts, callback) {\r\n        if (opts === void 0) { opts = {}; }\r\n        if (callback === void 0) { callback = common_1.noop; }\r\n        if (typeof opts === 'function') {\r\n            callback = opts;\r\n            opts = {};\r\n        }\r\n        var ctx = new context_1.AtatContext(opts);\r\n        var compiler = new compiler_1.AtatCompiler();\r\n        compiler.compile(input, ctx, function (err, output) {\r\n            if (err) {\r\n                return callback(err);\r\n            }\r\n            var render = new Function(ctx.arguments, output + ';return this.output;');\r\n            ctx.template = function (model) {\r\n                try {\r\n                    ctx.output = '';\r\n                    ctx.model = model || ctx.model;\r\n                    var body = render.call(ctx, ctx.model, ctx.helpers, ctx.body);\r\n                    if (ctx.layout) {\r\n                        ctx.layout.context.body = body;\r\n                        body = ctx.layout(ctx.model);\r\n                    }\r\n                    return body;\r\n                }\r\n                catch (e) {\r\n                    return e.toString();\r\n                }\r\n            };\r\n            ctx.template.context = ctx;\r\n            callback(null, ctx.template);\r\n        });\r\n    },\r\n    __express: function (path, options, callback) {\r\n        exports.atat.compileByPath(path, function (err, template) {\r\n            if (err) {\r\n                return callback(err.toString());\r\n            }\r\n            return callback(null, template(options));\r\n        });\r\n    }\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar helpers_1 = require(\"./helpers\");\r\nvar atat_1 = require(\"./atat\");\r\nexports.inline_tags = {\r\n    '(@section\\\\()([^]*?)(\\\\)@)': output_section,\r\n    '(@layout\\\\()([^]*?)(\\\\)@)': compile_layout,\r\n    '(@partial\\\\()([^]*?)(\\\\)@)': compile_partial,\r\n    '(@\\\\()([^]*?)(\\\\)@)': output_as_text,\r\n    '(@!\\\\()([^]*?)(\\\\)@)': output_as_html\r\n};\r\nfunction output_as_text(inside, ctx, callback) {\r\n    try {\r\n        var val = inside.value.trim();\r\n        if (val === '') {\r\n            callback();\r\n        }\r\n        callback(null, \"this.output += this.helpers.encode(\" + inside.value.trim() + \");\");\r\n    }\r\n    catch (e) {\r\n        callback(e);\r\n    }\r\n}\r\nfunction output_as_html(inside, ctx, callback) {\r\n    try {\r\n        var val = inside.value.trim();\r\n        if (val === '') {\r\n            callback();\r\n        }\r\n        callback(null, \"this.output += (\" + inside.value.trim() + \");\");\r\n    }\r\n    catch (e) {\r\n        callback(e);\r\n    }\r\n}\r\nfunction compile_layout(inside, ctx, callback) {\r\n    try {\r\n        if (ctx.layout) {\r\n            return callback();\r\n        }\r\n        atat_1.atat.compileByPath(helpers_1.escape_quotes(inside.value), ctx.options, function (err, template) {\r\n            if (err) {\r\n                return callback(err);\r\n            }\r\n            ctx.layout = template;\r\n            template.context.parent = ctx;\r\n            callback();\r\n        });\r\n    }\r\n    catch (e) {\r\n        callback(e);\r\n    }\r\n}\r\nfunction compile_partial(inside, ctx, callback) {\r\n    try {\r\n        var value = inside.value.trim();\r\n        if (value == '') {\r\n            return callback(new Error('Partial parsing error'));\r\n        }\r\n        var args_1 = value.split(/\\s*,\\s*/g);\r\n        var uri = helpers_1.escape_quotes(args_1.shift());\r\n        atat_1.atat.compileByPath(uri, ctx.options, function (err, template) {\r\n            if (err) {\r\n                return callback(err);\r\n            }\r\n            ctx.partials.push(template);\r\n            template.context.parent = ctx;\r\n            var output = \"this.output += this.partials[\" + (ctx.partials.length - 1) + \"](\" + args_1 + \");\";\r\n            callback(null, output);\r\n        });\r\n    }\r\n    catch (e) {\r\n        callback(e);\r\n    }\r\n}\r\nfunction output_section(inside, ctx, callback) {\r\n    try {\r\n        var name_1 = helpers_1.escape_quotes(inside.value);\r\n        var output = \"this.output += (function(){var s = this.section('\" + name_1 + \"'); return s?s(\" + ctx.arguments + \"):\\\"\\\";}).call(this);\";\r\n        callback(null, output);\r\n    }\r\n    catch (e) {\r\n        callback(e);\r\n    }\r\n}\r\nfunction output_call_helper(inside, ctx, callback) {\r\n    try {\r\n        var name_2 = inside.left.value.substring(1, inside.left.value.length - 1);\r\n        if (typeof ctx.helpers[name_2] !== 'function') {\r\n            throw \"Helper \\\"\" + name_2 + \"\\\" didn't declarated\";\r\n        }\r\n        callback(null, \"this.output += this.helpers.\" + name_2 + \"(\" + inside.value.trim() + \");\");\r\n    }\r\n    catch (e) {\r\n        callback(e);\r\n    }\r\n}\r\nexports.output_call_helper = output_call_helper;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction load_file(path, callback) {\r\n    var request = new XMLHttpRequest();\r\n    request.open('GET', path, true);\r\n    request.onreadystatechange = function () {\r\n        if (this.readyState === 4) {\r\n            if (this.status >= 200 && this.status < 400) {\r\n                callback(null, this.responseText);\r\n            }\r\n            else {\r\n                callback(new Error('Not able to load template \"' + path + '\"'));\r\n            }\r\n        }\r\n    };\r\n    request.send();\r\n    request = null;\r\n}\r\nexports.load_file = load_file;\r\n;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar common_1 = require(\"./common\");\r\nvar helpers_1 = require(\"./helpers\");\r\nvar regexp_1 = require(\"./regexp\");\r\nvar inline_1 = require(\"./inline\");\r\nvar AtatCompiler = /** @class */ (function () {\r\n    function AtatCompiler() {\r\n    }\r\n    AtatCompiler.prototype.compile = function (input, ctx, callback) {\r\n        var _this = this;\r\n        try {\r\n            var blocks = regexp_1.match_recursive(input, ctx.tags.open, ctx.tags.close);\r\n            helpers_1.loop_async(blocks, function (block, i, array, callback) {\r\n                try {\r\n                    if (block.name == common_1.VALUE_NAME_OUTSIDE) {\r\n                        if (block.value.trim() == '') {\r\n                            callback(null, '');\r\n                            return;\r\n                        }\r\n                        _this.compile_inline(block.value, ctx, callback);\r\n                        return;\r\n                    }\r\n                    if (block.name == common_1.VALUE_NAME_INSIDE) {\r\n                        var left = block.left, inside = block, right = block.right;\r\n                        var compiler = ctx.compiler(left.value);\r\n                        if (!compiler) {\r\n                            _this.compile_inline(left.value + inside.value + right.value, ctx, callback);\r\n                            return;\r\n                        }\r\n                        compiler.call(_this, inside, ctx, callback);\r\n                        return;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    callback(e);\r\n                }\r\n            }, function (err, results) {\r\n                if (err) {\r\n                    return callback(err);\r\n                }\r\n                callback(null, results.join(''));\r\n            });\r\n        }\r\n        catch (e) {\r\n            callback(e);\r\n        }\r\n    };\r\n    AtatCompiler.prototype.compile_inline = function (input, ctx, callback) {\r\n        var _this = this;\r\n        try {\r\n            var blocks = regexp_1.match_inline(input, ctx.inline);\r\n            helpers_1.loop_async(blocks, function (block, i, array, callback) {\r\n                try {\r\n                    if (block.name == common_1.VALUE_NAME_OUTSIDE) {\r\n                        ctx.parts.push(block.value);\r\n                        callback(null, 'this.output += this.parts[' + (ctx.parts.length - 1) + '];');\r\n                        return;\r\n                    }\r\n                    if (block.name == common_1.VALUE_NAME_INSIDE) {\r\n                        var left = block.left, inside = block, right = block.right;\r\n                        if (inside.value.trim() == '') {\r\n                            callback(null, '');\r\n                            return;\r\n                        }\r\n                        var compiler = ctx.compiler(left.value + inside.value + right.value);\r\n                        if (!compiler) {\r\n                            inline_1.output_call_helper.call(_this, inside, ctx, callback);\r\n                            return;\r\n                        }\r\n                        compiler.call(_this, inside, ctx, callback);\r\n                        return;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    callback(e);\r\n                }\r\n            }, function (err, results) {\r\n                if (err) {\r\n                    return callback(err);\r\n                }\r\n                callback(null, results.join(''));\r\n            });\r\n        }\r\n        catch (e) {\r\n            callback(e);\r\n        }\r\n    };\r\n    return AtatCompiler;\r\n}());\r\nexports.AtatCompiler = AtatCompiler;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar common_1 = require(\"./common\");\r\nvar regexp_1 = require(\"./regexp\");\r\nvar helpers_1 = require(\"./helpers\");\r\nvar atat_1 = require(\"./atat\");\r\nexports.tags = {\r\n    '@\\\\{': compile_code,\r\n    '@if\\\\s*\\\\(': compile_if,\r\n    '@while\\\\s*\\\\(': compile_while,\r\n    '@for\\\\s*\\\\(': compile_for,\r\n    '@function\\\\s+[$A-Za-z0-9]*\\\\s*\\\\(': compile_function,\r\n    '@section\\\\s+[$A-Za-z0-9]*\\\\s*\\\\{': compile_section\r\n};\r\nfunction compile_code(inside, ctx, callback) {\r\n    callback(null, inside.value.trim());\r\n}\r\nfunction compile_for(inside, ctx, callback) {\r\n    var code = 'for(' + inside.value + '}';\r\n    var blocks = regexp_1.match_recursive(code, /\\{/g, /\\}/g);\r\n    var out = '';\r\n    out += blocks[0].value;\r\n    out += '{';\r\n    this.compile(blocks[1].value, ctx, function (err, res) {\r\n        if (err) {\r\n            return callback(err);\r\n        }\r\n        out += res;\r\n        out += '}';\r\n        callback(null, out);\r\n    });\r\n}\r\nfunction compile_function(inside, ctx, callback) {\r\n    var left = inside.left.value.trim().substring(1);\r\n    callback(null, left + inside.value.trim() + '}');\r\n}\r\nfunction compile_if(inside, ctx, callback) {\r\n    var _this = this;\r\n    var code = 'if(' + inside.value + '}';\r\n    var blocks = regexp_1.match_recursive(code, /\\{/g, /\\}/g);\r\n    helpers_1.loop_async(blocks, function (block, i, array, callback) {\r\n        if (block.name == common_1.VALUE_NAME_OUTSIDE) {\r\n            return callback(null, block.value);\r\n        }\r\n        _this.compile(block.value, ctx, callback);\r\n    }, function (err, results) {\r\n        if (err) {\r\n            return callback(err);\r\n        }\r\n        callback(null, results.join(''));\r\n    });\r\n}\r\nfunction compile_section(inside, ctx, callback) {\r\n    var block = inside.value.trim();\r\n    var value = inside.left.value.trim();\r\n    var reg_name = /^@section\\s+([A-Za-z0-9]+)\\s*\\{/g;\r\n    var match = regexp_1.regexp_exec(value, reg_name);\r\n    if (!match || match.length > 2) {\r\n        return callback(new Error('Section parsing error'));\r\n    }\r\n    var name = match[1].trim();\r\n    if (ctx.sections[name]) {\r\n        return callback(new Error('Section already exists'));\r\n    }\r\n    atat_1.atat.compile(block, ctx.options, function (err, template) {\r\n        if (err) {\r\n            return callback(err);\r\n        }\r\n        template.context.parent = ctx;\r\n        ctx.sections[name] = template;\r\n        callback(null);\r\n    });\r\n}\r\nfunction compile_while(inside, ctx, callback) {\r\n    var code = 'while(' + inside.value + '}';\r\n    var blocks = regexp_1.match_recursive(code, /\\{/g, /\\}/g);\r\n    var out = '';\r\n    out += blocks[0].value;\r\n    out += '{';\r\n    this.compile(blocks[1].value, ctx, function (err, res) {\r\n        if (err) {\r\n            return callback(err);\r\n        }\r\n        out += res;\r\n        out += '}';\r\n        callback(null, out);\r\n    });\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.AtatDefaultOpions = {\r\n    modelname: \"it\",\r\n    helpersname: \"$\",\r\n    basePath: \"\",\r\n    helpers: {}\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar options_1 = require(\"./options\");\r\nvar helpers_1 = require(\"./helpers\");\r\nvar regexp_1 = require(\"./regexp\");\r\nvar inline_1 = require(\"./inline\");\r\nvar tags_1 = require(\"./tags\");\r\nvar AtatContext = /** @class */ (function () {\r\n    function AtatContext(opts) {\r\n        var _this = this;\r\n        this.options = helpers_1.merge(options_1.AtatDefaultOpions, opts);\r\n        this.helpers = helpers_1.merge(helpers_1.helpers, opts.helpers);\r\n        this.model = null;\r\n        this.output = '';\r\n        this.parts = [];\r\n        this.parent = null;\r\n        this.arguments = [this.options.modelname, this.options.helpersname, 'body'].join(',');\r\n        this.tags = helpers_1.get_tags(tags_1.tags);\r\n        this.inline = helpers_1.get_tags_inline(inline_1.inline_tags);\r\n        helpers_1.loop(inline_1.inline_tags, function (compiler, regexp) {\r\n            _this.tags.compilers.push({\r\n                compiler: compiler,\r\n                regexp: new RegExp(regexp, 'g')\r\n            });\r\n        });\r\n        this.layout = null;\r\n        this.partials = [];\r\n        this.sections = {};\r\n    }\r\n    AtatContext.prototype.section = function (name) {\r\n        return name ? this.sections[name] || (this.parent && this.parent.section(name)) : null;\r\n    };\r\n    AtatContext.prototype.compiler = function (str) {\r\n        if (str === void 0) { str = \"\"; }\r\n        for (var i = 0, l = this.tags.compilers.length; i < l; i++) {\r\n            var item = this.tags.compilers[i];\r\n            if (regexp_1.regexp_test(str, item.regexp)) {\r\n                return item.compiler;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    return AtatContext;\r\n}());\r\nexports.AtatContext = AtatContext;\r\n"],"sourceRoot":""}