{"version":3,"sources":["webpack://atat/webpack/universalModuleDefinition","webpack://atat/webpack/bootstrap","webpack://atat/./src/common.ts","webpack://atat/./src/helpers.ts","webpack://atat/./src/atat.ts","webpack://atat/./src/regexp.ts","webpack://atat/./src/inline.ts","webpack://atat/./src/options.ts","webpack://atat/./src/compiler.ts","webpack://atat/./src/context.ts","webpack://atat/./src/fileResolvers/index.ts","webpack://atat/./src/fileResolvers/DefaultFileResolver.ts","webpack://atat/./src/fileResolvers/FetchFileResolver.ts","webpack://atat/./src/tags.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;AClFa;AACb,8CAA8C,cAAc;AAC5D;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,eAAe;AACf,eAAe;AACf,eAAe;AACf,eAAe;AACf,eAAe;AACf,eAAe;AACf;AACA,+BAA+B;AAC/B,gCAAgC;;;;;;;;AChBnB;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,CAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,OAAO;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,WAAW;AACrC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,YAAY;AACvC,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,yBAAyB,UAAU;AACnC;AACA;AACA;AACA;AACA,yBAAyB,UAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,qBAAqB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtKa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,CAAU;AACjC,iBAAiB,mBAAO,CAAC,CAAY;AACrC,gBAAgB,mBAAO,CAAC,CAAW;AACnC,gBAAgB,mBAAO,CAAC,CAAW;AACnC,gBAAgB,mBAAO,CAAC,CAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,oCAAoC,iBAAiB;AACrD,qCAAqC,6BAA6B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,mBAAmB;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,oCAAoC,iBAAiB;AACrD,qCAAqC,6BAA6B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,+BAA+B,YAAY;AAC3C,oCAAoC,iBAAiB;AACrD,qCAAqC,6BAA6B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,oCAAoC,iBAAiB;AACrD,qCAAqC,6BAA6B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;;;;;;;AC/Ha;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,CAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,yBAAyB,SAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,SAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;;;;;;AClMa;AACb,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,CAAQ;AAC7B,gBAAgB,mBAAO,CAAC,CAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAwF;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,uCAAuC;AACxF,sDAAsD,aAAa;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gGAAgG;AAChG;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnGa;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,CAAiB;AAC/C;AACA;AACA;AACA,eAAe;AACf;AACA;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,CAAU;AACjC,gBAAgB,mBAAO,CAAC,CAAW;AACnC,eAAe,mBAAO,CAAC,CAAU;AACjC,eAAe,mBAAO,CAAC,CAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sGAAsG;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACtGa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,CAAW;AACnC,eAAe,mBAAO,CAAC,CAAU;AACjC,gBAAgB,mBAAO,CAAC,CAAW;AACnC,eAAe,mBAAO,CAAC,CAAU;AACjC,aAAa,mBAAO,CAAC,EAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,UAAU;AACvC,uDAAuD,OAAO;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AC9Ca;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D,4CAA4C,mBAAO,CAAC,CAAuB;AAC3E;AACA,0CAA0C,mBAAO,CAAC,EAAqB;AACvE;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,yBAAyB,mBAAO,CAAC,4HAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AChBa;AACb;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA;AACA,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS,EAAE;AACX;AACA;AACA,CAAC;AACD;;;;;;;;AClEa;AACb,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,CAAQ;AAC7B,eAAe,mBAAO,CAAC,CAAU;AACjC,gBAAgB,mBAAO,CAAC,CAAW;AACnC,eAAe,mBAAO,CAAC,CAAU;AACjC;AACA,SAAS;AACT;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,kDAAkD,OAAO;AACzD;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,KAAK;AACL;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA,wCAAwC;AACxC,kDAAkD,OAAO;AACzD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,2CAA2C;AAC3C,kDAAkD,OAAO;AACzD;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,KAAK;AACL","file":"atat.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"atat\"] = factory();\n\telse\n\t\troot[\"atat\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// tslint:disable-next-line: no-empty\r\nfunction noop() { }\r\nexports.noop = noop;\r\nexports.VALUE_NAME_OUTSIDE = 'outside';\r\nexports.VALUE_NAME_INSIDE = 'inside';\r\nexports.HTML_RULES = {\r\n    '\"': '&#34;',\r\n    '&': '&#38;',\r\n    \"'\": '&#39;',\r\n    '/': '&#47;',\r\n    '<': '&#60;',\r\n    '>': '&#62;',\r\n};\r\nexports.CLEAR_TAGS = /[-[\\](){}*+?.,\\\\^$|#\\s]/g;\r\nexports.MATCH_HTML = /&(?!#?\\w+;)|<|>|\"|'|\\//g;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar common_1 = require(\"./common\");\r\nexports.helpers = {\r\n    encode: encodeHtml,\r\n    join: joinHelper,\r\n    json: jsonStringify,\r\n    lower: lowercaseHelper,\r\n    upper: uppercaseHelper,\r\n};\r\nfunction merge(src, dest) {\r\n    if (dest === void 0) { dest = {}; }\r\n    for (var x in src) {\r\n        if (!dest.hasOwnProperty(x) && src.hasOwnProperty(x)) {\r\n            if (typeof src[x] === 'object') {\r\n                dest[x] = merge(src[x]);\r\n            }\r\n            else {\r\n                dest[x] = src[x];\r\n            }\r\n        }\r\n    }\r\n    return dest;\r\n}\r\nexports.merge = merge;\r\nfunction getTags(tags) {\r\n    var regexps = [];\r\n    loop(tags, function (compiler, regexp) {\r\n        if (regexps.indexOf(regexp) === -1) {\r\n            regexps.push(regexp);\r\n        }\r\n    });\r\n    var compilers = [];\r\n    loop(tags, function (compiler, regexp) {\r\n        compilers.push({\r\n            compiler: compiler,\r\n            regexp: new RegExp(regexp, 'g'),\r\n        });\r\n    });\r\n    return {\r\n        compilers: compilers,\r\n        close: /}@/g,\r\n        open: new RegExp(regexps.join('|'), 'g'),\r\n    };\r\n}\r\nexports.getTags = getTags;\r\nfunction getTagsInline(inlineTags) {\r\n    var regexps = [];\r\n    loop(inlineTags, function (compiler, regexp) {\r\n        regexps.push(regexp);\r\n    });\r\n    regexps.push('(@[A-Za-z0-9$]+\\\\()([^]*?)(\\\\)@)');\r\n    return new RegExp(regexps.join('|'), 'g');\r\n}\r\nexports.getTagsInline = getTagsInline;\r\nfunction loop(array, fn) {\r\n    if (Object.prototype.toString.call(array) !== '[object Array]') {\r\n        for (var x in array) {\r\n            if (array.hasOwnProperty(x)) {\r\n                fn(array[x], x, array);\r\n            }\r\n        }\r\n        return;\r\n    }\r\n    for (var i = 0, l = array.length; i < l; i += 1) {\r\n        fn(array[i], i, array);\r\n    }\r\n}\r\nexports.loop = loop;\r\nfunction loopAsync(array, fn, callback) {\r\n    var ready = 0;\r\n    var finished = false;\r\n    var results = [];\r\n    var length = array.length;\r\n    for (var i = 0; i < length; i += 1) {\r\n        fn(array[i], i, array, cb(i));\r\n    }\r\n    function cb(index) {\r\n        return function (err, res) {\r\n            if (finished) {\r\n                return;\r\n            }\r\n            if (err) {\r\n                finished = true;\r\n                callback(err);\r\n                return;\r\n            }\r\n            results[index] = res;\r\n            ready += 1;\r\n            if (ready === length) {\r\n                finished = true;\r\n                callback(null, results);\r\n            }\r\n        };\r\n    }\r\n}\r\nexports.loopAsync = loopAsync;\r\nfunction encodeHtml(code) {\r\n    if (code === void 0) { code = ''; }\r\n    return code.toString().replace(common_1.MATCH_HTML, function (m) {\r\n        return common_1.HTML_RULES[m] || m;\r\n    });\r\n}\r\nexports.encodeHtml = encodeHtml;\r\nfunction trimString(str) {\r\n    var chars = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        chars[_i - 1] = arguments[_i];\r\n    }\r\n    if (chars.length === 0) {\r\n        return String.prototype.trim.call(str);\r\n    }\r\n    var result = str;\r\n    while (chars.indexOf(str.charAt(0)) >= 0) {\r\n        result = str.substring(1);\r\n    }\r\n    while (chars.indexOf(str.charAt(str.length - 1)) >= 0) {\r\n        result = str.substring(0, str.length - 1);\r\n    }\r\n    return result;\r\n}\r\nexports.trimString = trimString;\r\nfunction escapeQuotes(str) {\r\n    return trimString(str)\r\n        .replace(/^\"(.*)\"$/g, '$1')\r\n        .replace(/^'(.*)'$/g, '$1');\r\n}\r\nexports.escapeQuotes = escapeQuotes;\r\nfunction jsonStringify(obj) {\r\n    return JSON.stringify(obj);\r\n}\r\nexports.jsonStringify = jsonStringify;\r\nfunction joinHelper(array, separator) {\r\n    if (array === void 0) { array = []; }\r\n    if (separator === void 0) { separator = ''; }\r\n    return Array.prototype.join.call(array, separator);\r\n}\r\nexports.joinHelper = joinHelper;\r\nfunction uppercaseHelper(str) {\r\n    if (str === void 0) { str = ''; }\r\n    return str.toString().toUpperCase();\r\n}\r\nexports.uppercaseHelper = uppercaseHelper;\r\nfunction lowercaseHelper(str) {\r\n    if (str === void 0) { str = ''; }\r\n    return str.toString().toLowerCase();\r\n}\r\nexports.lowercaseHelper = lowercaseHelper;\r\nfunction resolveUrl(base, relative) {\r\n    var stack = base.split('/');\r\n    var parts = relative.split('/');\r\n    stack.pop();\r\n    for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {\r\n        var part = parts_1[_i];\r\n        if (part === '.') {\r\n            continue;\r\n        }\r\n        if (part === '..') {\r\n            stack.pop();\r\n        }\r\n        else {\r\n            stack.push(part);\r\n        }\r\n    }\r\n    return stack.join('/');\r\n}\r\nexports.resolveUrl = resolveUrl;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar common_1 = require(\"./common\");\r\nvar compiler_1 = require(\"./compiler\");\r\nvar context_1 = require(\"./context\");\r\nvar helpers_1 = require(\"./helpers\");\r\nvar options_1 = require(\"./options\");\r\nexports.atat = {\r\n    config: function (opts) {\r\n        var options = helpers_1.merge(options_1.DEFAULT_OPTIONS, opts);\r\n        for (var x in options) {\r\n            if (options_1.DEFAULT_OPTIONS.hasOwnProperty(x)) {\r\n                options_1.DEFAULT_OPTIONS[x] = options[x];\r\n            }\r\n        }\r\n    },\r\n    parse: function (input, optionsArg, callbackArg) {\r\n        if (optionsArg === void 0) { optionsArg = {}; }\r\n        if (callbackArg === void 0) { callbackArg = common_1.noop; }\r\n        var options = optionsArg;\r\n        var callback = callbackArg;\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = {};\r\n        }\r\n        if (callback === common_1.noop && typeof Promise !== 'undefined') {\r\n            return new Promise(function (resolve, reject) {\r\n                exports.atat.parse(input, options, function (err, result) {\r\n                    err ? reject(err) : resolve(result);\r\n                });\r\n            });\r\n        }\r\n        var ctx = new context_1.AtatContext(options);\r\n        var compiler = new compiler_1.AtatCompiler();\r\n        compiler.compile(input, ctx, function (err, output) {\r\n            if (err) {\r\n                return callback(err);\r\n            }\r\n            // tslint:disable-next-line: no-function-constructor-with-string-args\r\n            var render = new Function(ctx.arguments, output + \";return this.output;\");\r\n            ctx.template = function (model) {\r\n                try {\r\n                    ctx.output = '';\r\n                    ctx.model = model || ctx.model;\r\n                    var body = render.call(ctx, ctx.model, ctx.helpers, ctx.body);\r\n                    if (ctx.layout) {\r\n                        ctx.layout.context.body = body;\r\n                        body = ctx.layout(ctx.model);\r\n                    }\r\n                    return body;\r\n                }\r\n                catch (e) {\r\n                    return e.toString();\r\n                }\r\n            };\r\n            ctx.template.context = ctx;\r\n            callback(null, ctx.template);\r\n        });\r\n    },\r\n    loadAndParse: function (path, optionsArg, callbackArg) {\r\n        if (optionsArg === void 0) { optionsArg = {}; }\r\n        if (callbackArg === void 0) { callbackArg = common_1.noop; }\r\n        var options = optionsArg;\r\n        var callback = callbackArg;\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = {};\r\n        }\r\n        if (callback === common_1.noop && typeof Promise !== 'undefined') {\r\n            return new Promise(function (resolve, reject) {\r\n                exports.atat.loadAndParse(path, options, function (err, result) {\r\n                    err ? reject(err) : resolve(result);\r\n                });\r\n            });\r\n        }\r\n        var fileResolver = options.fileResolver || options_1.DEFAULT_OPTIONS.fileResolver;\r\n        fileResolver.loadFile(path, function (err, content) {\r\n            err ? callback(err) : exports.atat.parse(content, options, callback);\r\n        });\r\n    },\r\n    render: function (input, model, optionsArg, callbackArg) {\r\n        if (model === void 0) { model = {}; }\r\n        if (optionsArg === void 0) { optionsArg = {}; }\r\n        if (callbackArg === void 0) { callbackArg = common_1.noop; }\r\n        var options = optionsArg;\r\n        var callback = callbackArg;\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = {};\r\n        }\r\n        if (callback === common_1.noop && typeof Promise !== 'undefined') {\r\n            return new Promise(function (resolve, reject) {\r\n                exports.atat.render(input, model, options, function (err, result) {\r\n                    err ? reject(err) : resolve(result);\r\n                });\r\n            });\r\n        }\r\n        exports.atat.parse(input, options, function (err, render) {\r\n            err ? callback(err) : callback(null, render(model));\r\n        });\r\n    },\r\n    loadAndRender: function (path, model, optionsArg, callbackArg) {\r\n        if (optionsArg === void 0) { optionsArg = {}; }\r\n        if (callbackArg === void 0) { callbackArg = common_1.noop; }\r\n        var options = optionsArg;\r\n        var callback = callbackArg;\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = {};\r\n        }\r\n        if (callback === common_1.noop && typeof Promise !== 'undefined') {\r\n            return new Promise(function (resolve, reject) {\r\n                exports.atat.loadAndRender(path, model, options, function (err, result) {\r\n                    err ? reject(err) : resolve(result);\r\n                });\r\n            });\r\n        }\r\n        exports.atat.loadAndParse(path, options, function (err, render) {\r\n            err ? callback(err) : callback(null, render(model));\r\n        });\r\n    },\r\n    // tslint:disable-next-line: function-name\r\n    __express: function (path, options, callback) {\r\n        exports.atat.loadAndParse(path, function (err, template) {\r\n            err ? callback(err.toString()) : callback(null, template(options));\r\n        });\r\n    },\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar common_1 = require(\"./common\");\r\nfunction matchRecursive(str, left, right) {\r\n    var global = left.global;\r\n    var sticky = left.sticky;\r\n    var output = [];\r\n    var openTokens = 0;\r\n    var delimStart = 0;\r\n    var delimEnd = 0;\r\n    var lastOuterEnd = 0;\r\n    var outerStart;\r\n    var innerStart;\r\n    var leftMatch;\r\n    var rightMatch;\r\n    while (true) {\r\n        leftMatch = regexpExec(str, left, delimEnd);\r\n        rightMatch = regexpExec(str, right, delimEnd);\r\n        // Keep the leftmost match only\r\n        if (leftMatch && rightMatch) {\r\n            if (leftMatch.index <= rightMatch.index) {\r\n                rightMatch = null;\r\n            }\r\n            else {\r\n                leftMatch = null;\r\n            }\r\n        }\r\n        // Paths (LM: leftMatch, RM: rightMatch, OT: openTokens):\r\n        // LM | RM | OT | Result\r\n        // 1  | 0  | 1  | loop\r\n        // 1  | 0  | 0  | loop\r\n        // 0  | 1  | 1  | loop\r\n        // 0  | 1  | 0  | throw\r\n        // 0  | 0  | 1  | throw\r\n        // 0  | 0  | 0  | break\r\n        // The paths above don't include the sticky mode special case. The loop ends after the\r\n        // first completed match if not `global`.\r\n        if (leftMatch || rightMatch) {\r\n            delimStart = (leftMatch || rightMatch).index;\r\n            delimEnd = delimStart + (leftMatch || rightMatch)[0].length;\r\n        }\r\n        else if (!openTokens) {\r\n            break;\r\n        }\r\n        if (sticky && !openTokens && delimStart > lastOuterEnd) {\r\n            break;\r\n        }\r\n        if (leftMatch) {\r\n            if (!openTokens) {\r\n                outerStart = delimStart;\r\n                innerStart = delimEnd;\r\n            }\r\n            openTokens += 1;\r\n        }\r\n        else if (rightMatch && openTokens) {\r\n            openTokens -= 1;\r\n            if (!openTokens) {\r\n                if (outerStart > lastOuterEnd) {\r\n                    output.push({\r\n                        name: common_1.VALUE_NAME_OUTSIDE,\r\n                        value: str.slice(lastOuterEnd, outerStart),\r\n                        start: lastOuterEnd,\r\n                        end: outerStart,\r\n                    });\r\n                }\r\n                output.push({\r\n                    name: common_1.VALUE_NAME_INSIDE,\r\n                    value: str.slice(innerStart, delimStart),\r\n                    start: innerStart,\r\n                    end: delimStart,\r\n                    left: {\r\n                        value: str.slice(outerStart, innerStart),\r\n                        start: outerStart,\r\n                        end: innerStart,\r\n                    },\r\n                    right: {\r\n                        value: str.slice(delimStart, delimEnd),\r\n                        start: delimStart,\r\n                        end: delimEnd,\r\n                    },\r\n                });\r\n                lastOuterEnd = delimEnd;\r\n                if (!global) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            throw new Error('Unbalanced delimiter found in string');\r\n        }\r\n        // If the delimiter matched an empty string, avoid an infinite loop\r\n        if (delimStart === delimEnd) {\r\n            delimEnd += 1;\r\n        }\r\n    }\r\n    if (global && str.length > lastOuterEnd) {\r\n        output.push({\r\n            end: str.length,\r\n            name: common_1.VALUE_NAME_OUTSIDE,\r\n            start: lastOuterEnd,\r\n            value: str.slice(lastOuterEnd),\r\n        });\r\n    }\r\n    return output;\r\n}\r\nexports.matchRecursive = matchRecursive;\r\nfunction regexpTest(str, regexp, pos) {\r\n    if (pos === void 0) { pos = 0; }\r\n    regexp.lastIndex = pos;\r\n    var test = regexp.test(str);\r\n    if (regexp.global) {\r\n        regexp.lastIndex = test ? regexp.lastIndex : 0;\r\n    }\r\n    return test;\r\n}\r\nexports.regexpTest = regexpTest;\r\nfunction regexpExec(str, regexp, pos) {\r\n    if (pos === void 0) { pos = 0; }\r\n    regexp.lastIndex = pos;\r\n    var match = regexp.exec(str);\r\n    if (regexp.global) {\r\n        regexp.lastIndex = match ? regexp.lastIndex : 0;\r\n    }\r\n    return match;\r\n}\r\nexports.regexpExec = regexpExec;\r\nfunction cleanArray(array) {\r\n    for (var i = 0; i < array.length; i += 1) {\r\n        if (typeof array[i] === 'undefined') {\r\n            array.splice(i, 1);\r\n            i -= 1;\r\n        }\r\n    }\r\n}\r\nexports.cleanArray = cleanArray;\r\nfunction matchInline(str, regexp) {\r\n    var global = regexp.global;\r\n    var sticky = regexp.sticky;\r\n    var output = [];\r\n    var lastEnd = 0;\r\n    var leftStart = 0;\r\n    var innerStart;\r\n    var innerEnd;\r\n    while (true) {\r\n        var match = regexpExec(str, regexp, lastEnd);\r\n        if (match === null) {\r\n            break;\r\n        }\r\n        leftStart = match.index;\r\n        if (sticky && leftStart > lastEnd) {\r\n            break;\r\n        }\r\n        cleanArray(match);\r\n        innerStart = leftStart + match[1].length;\r\n        innerEnd = lastEnd + innerStart + match[2].length;\r\n        if (leftStart > lastEnd) {\r\n            output.push({\r\n                name: common_1.VALUE_NAME_OUTSIDE,\r\n                value: str.slice(lastEnd, leftStart),\r\n                start: lastEnd,\r\n                end: leftStart,\r\n            });\r\n        }\r\n        output.push({\r\n            name: common_1.VALUE_NAME_INSIDE,\r\n            value: match[2],\r\n            start: innerStart,\r\n            end: innerEnd,\r\n            left: {\r\n                value: match[1],\r\n                start: leftStart,\r\n                end: innerStart,\r\n            },\r\n            right: {\r\n                value: match[3],\r\n                start: innerEnd,\r\n                end: innerEnd + match[3].length,\r\n            },\r\n        });\r\n        lastEnd = leftStart + match[0].length;\r\n        if (!global) {\r\n            break;\r\n        }\r\n    }\r\n    if (global && str.length > lastEnd) {\r\n        output.push({\r\n            name: common_1.VALUE_NAME_OUTSIDE,\r\n            value: str.slice(lastEnd),\r\n            start: lastEnd,\r\n            end: str.length,\r\n        });\r\n    }\r\n    return output;\r\n}\r\nexports.matchInline = matchInline;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar atat_1 = require(\"./atat\");\r\nvar helpers_1 = require(\"./helpers\");\r\nexports.inlineTags = {\r\n    '(@!\\\\()([^]*?)(\\\\)@)': outputAsHtml,\r\n    '(@\\\\()([^]*?)(\\\\)@)': outputAsText,\r\n    '(@layout\\\\()([^]*?)(\\\\)@)': compileLayout,\r\n    '(@partial\\\\()([^]*?)(\\\\)@)': compilePartial,\r\n    '(@section\\\\()([^]*?)(\\\\)@)': outputSection,\r\n};\r\nfunction outputAsText(inside, ctx, callback) {\r\n    try {\r\n        var val = inside.value.trim();\r\n        if (val === '') {\r\n            callback();\r\n        }\r\n        callback(null, \"this.output += this.helpers.encode(\" + inside.value.trim() + \");\");\r\n    }\r\n    catch (e) {\r\n        callback(e);\r\n    }\r\n}\r\nfunction outputAsHtml(inside, ctx, callback) {\r\n    try {\r\n        var val = inside.value.trim();\r\n        if (val === '') {\r\n            callback();\r\n        }\r\n        callback(null, \"this.output += (\" + inside.value.trim() + \");\");\r\n    }\r\n    catch (e) {\r\n        callback(e);\r\n    }\r\n}\r\nfunction compileLayout(inside, ctx, callback) {\r\n    try {\r\n        if (ctx.layout) {\r\n            return callback();\r\n        }\r\n        atat_1.atat.loadAndParse(helpers_1.escapeQuotes(inside.value), ctx.options, function (err, template) {\r\n            if (err) {\r\n                return callback(err);\r\n            }\r\n            ctx.layout = template;\r\n            template.context.parent = ctx;\r\n            callback();\r\n        });\r\n    }\r\n    catch (e) {\r\n        callback(e);\r\n    }\r\n}\r\nfunction compilePartial(inside, ctx, callback) {\r\n    try {\r\n        var value = inside.value.trim();\r\n        if (value === '') {\r\n            return callback(new Error('Partial parsing error'));\r\n        }\r\n        var args_1 = value.split(/\\s*,\\s*/g);\r\n        var uri = helpers_1.escapeQuotes(args_1.shift());\r\n        atat_1.atat.loadAndParse(uri, ctx.options, function (err, template) {\r\n            if (err) {\r\n                return callback(err);\r\n            }\r\n            ctx.partials.push(template);\r\n            template.context.parent = ctx;\r\n            var output = \"this.output += this.partials[\" + (ctx.partials.length -\r\n                1) + \"](\" + args_1 + \");\";\r\n            callback(null, output);\r\n        });\r\n    }\r\n    catch (e) {\r\n        callback(e);\r\n    }\r\n}\r\nfunction outputSection(inside, ctx, callback) {\r\n    try {\r\n        var name_1 = helpers_1.escapeQuotes(inside.value);\r\n        var output = \"this.output += (function(){var s = this.section('\" + name_1 + \"'); \" +\r\n            (\"return s?s(\" + ctx.arguments + \"):\\\"\\\";}).call(this);\");\r\n        callback(null, output);\r\n    }\r\n    catch (e) {\r\n        callback(e);\r\n    }\r\n}\r\nfunction outputCallHelper(inside, ctx, callback) {\r\n    try {\r\n        var name_2 = inside.left.value.substring(1, inside.left.value.length - 1);\r\n        if (typeof ctx.helpers[name_2] !== 'function') {\r\n            throw new Error(\"Helper \" + name_2 + \" isn't declarated\");\r\n        }\r\n        callback(null, \"this.output += this.helpers.\" + name_2 + \"(\" + inside.value.trim() + \");\");\r\n    }\r\n    catch (e) {\r\n        callback(e);\r\n    }\r\n}\r\nexports.outputCallHelper = outputCallHelper;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar fileResolvers_1 = require(\"./fileResolvers\");\r\nexports.DEFAULT_OPTIONS = {\r\n    it: 'it',\r\n    $: '$',\r\n    helpers: {},\r\n    fileResolver: new fileResolvers_1.DefaultFileResolver(),\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar common_1 = require(\"./common\");\r\nvar helpers_1 = require(\"./helpers\");\r\nvar inline_1 = require(\"./inline\");\r\nvar regexp_1 = require(\"./regexp\");\r\nvar AtatCompiler = /** @class */ (function () {\r\n    function AtatCompiler() {\r\n    }\r\n    AtatCompiler.prototype.compile = function (input, ctx, callback) {\r\n        var _this = this;\r\n        try {\r\n            if (input.length === 0) {\r\n                callback(null, '');\r\n                return;\r\n            }\r\n            var blocks = regexp_1.matchRecursive(input, ctx.tags.open, ctx.tags.close);\r\n            helpers_1.loopAsync(blocks, function (block, i, array, loopCallback) {\r\n                try {\r\n                    if (block.name === common_1.VALUE_NAME_OUTSIDE) {\r\n                        if (block.value.trim() === '') {\r\n                            loopCallback(null, '');\r\n                            return;\r\n                        }\r\n                        _this.compileInline(block.value, ctx, loopCallback);\r\n                        return;\r\n                    }\r\n                    if (block.name === common_1.VALUE_NAME_INSIDE) {\r\n                        var left = block.left;\r\n                        var inside = block;\r\n                        var right = block.right;\r\n                        var compiler = ctx.compiler(left.value);\r\n                        if (!compiler) {\r\n                            _this.compileInline(left.value + inside.value + right.value, ctx, loopCallback);\r\n                            return;\r\n                        }\r\n                        compiler.call(_this, inside, ctx, loopCallback);\r\n                        return;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    loopCallback(e);\r\n                }\r\n            }, function (err, results) {\r\n                if (err) {\r\n                    return callback(err);\r\n                }\r\n                callback(null, results.join(''));\r\n            });\r\n        }\r\n        catch (e) {\r\n            callback(e);\r\n        }\r\n    };\r\n    AtatCompiler.prototype.compileInline = function (input, ctx, callback) {\r\n        var _this = this;\r\n        try {\r\n            if (input.length === 0) {\r\n                callback(null, '');\r\n                return;\r\n            }\r\n            var blocks = regexp_1.matchInline(input, ctx.inline);\r\n            helpers_1.loopAsync(blocks, function (block, i, array, loopCallback) {\r\n                try {\r\n                    if (block.name === common_1.VALUE_NAME_OUTSIDE) {\r\n                        ctx.parts.push(block.value);\r\n                        loopCallback(null, \"this.output += this.parts[\" + (ctx.parts.length - 1) + \"];\");\r\n                        return;\r\n                    }\r\n                    if (block.name === common_1.VALUE_NAME_INSIDE) {\r\n                        var left = block.left;\r\n                        var inside = block;\r\n                        var right = block.right;\r\n                        if (inside.value.trim() === '') {\r\n                            loopCallback(null, '');\r\n                            return;\r\n                        }\r\n                        var compiler = ctx.compiler(left.value + inside.value + right.value);\r\n                        if (!compiler) {\r\n                            inline_1.outputCallHelper.call(_this, inside, ctx, loopCallback);\r\n                            return;\r\n                        }\r\n                        compiler.call(_this, inside, ctx, loopCallback);\r\n                        return;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    loopCallback(e);\r\n                }\r\n            }, function (err, results) {\r\n                if (err) {\r\n                    return callback(err);\r\n                }\r\n                callback(null, results.join(''));\r\n            });\r\n        }\r\n        catch (e) {\r\n            callback(e);\r\n        }\r\n    };\r\n    return AtatCompiler;\r\n}());\r\nexports.AtatCompiler = AtatCompiler;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar helpers_1 = require(\"./helpers\");\r\nvar inline_1 = require(\"./inline\");\r\nvar options_1 = require(\"./options\");\r\nvar regexp_1 = require(\"./regexp\");\r\nvar tags_1 = require(\"./tags\");\r\nvar AtatContext = /** @class */ (function () {\r\n    function AtatContext(opts) {\r\n        var _this = this;\r\n        this.options = helpers_1.merge(options_1.DEFAULT_OPTIONS, opts);\r\n        this.helpers = helpers_1.merge(helpers_1.helpers, opts.helpers);\r\n        this.model = null;\r\n        this.output = '';\r\n        this.parts = [];\r\n        this.parent = null;\r\n        this.arguments = [this.options.it, this.options.$, 'body'].join(',');\r\n        this.tags = helpers_1.getTags(tags_1.tags);\r\n        this.inline = helpers_1.getTagsInline(inline_1.inlineTags);\r\n        helpers_1.loop(inline_1.inlineTags, function (compiler, regexp) {\r\n            _this.tags.compilers.push({\r\n                compiler: compiler,\r\n                regexp: new RegExp(regexp, 'g'),\r\n            });\r\n        });\r\n        this.layout = null;\r\n        this.partials = [];\r\n        this.sections = {};\r\n    }\r\n    AtatContext.prototype.section = function (name) {\r\n        return name\r\n            ? this.sections[name] || (this.parent && this.parent.section(name))\r\n            : null;\r\n    };\r\n    AtatContext.prototype.compiler = function (str) {\r\n        if (str === void 0) { str = ''; }\r\n        for (var i = 0, l = this.tags.compilers.length; i < l; i += 1) {\r\n            var item = this.tags.compilers[i];\r\n            if (regexp_1.regexpTest(str, item.regexp)) {\r\n                return item.compiler;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    return AtatContext;\r\n}());\r\nexports.AtatContext = AtatContext;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DefaultFileResolver_1 = __importDefault(require(\"./DefaultFileResolver\"));\r\nexports.DefaultFileResolver = DefaultFileResolver_1.default;\r\nvar FetchFileResolver_1 = __importDefault(require(\"./FetchFileResolver\"));\r\nexports.FetchFileResolver = FetchFileResolver_1.default;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DefaultFileResolver = /** @class */ (function () {\r\n    function DefaultFileResolver() {\r\n        this.loadFile = function (path, callback) {\r\n            try {\r\n                var fs = require('fs');\r\n                fs.readFile(path, 'utf-8', callback);\r\n            }\r\n            catch (err) {\r\n                callback(err);\r\n            }\r\n        };\r\n    }\r\n    return DefaultFileResolver;\r\n}());\r\nexports.default = DefaultFileResolver;\r\n","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar FetchFileResolver = /** @class */ (function () {\r\n    function FetchFileResolver() {\r\n        var _this = this;\r\n        this.loadFile = function (path, callback) { return __awaiter(_this, void 0, void 0, function () {\r\n            var res, _a, _b, err_1;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        _c.trys.push([0, 3, , 4]);\r\n                        return [4 /*yield*/, fetch(path)];\r\n                    case 1:\r\n                        res = _c.sent();\r\n                        _a = callback;\r\n                        _b = [null];\r\n                        return [4 /*yield*/, res.text()];\r\n                    case 2:\r\n                        _a.apply(void 0, _b.concat([_c.sent()]));\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        err_1 = _c.sent();\r\n                        callback(err_1);\r\n                        return [3 /*break*/, 4];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        }); };\r\n    }\r\n    return FetchFileResolver;\r\n}());\r\nexports.default = FetchFileResolver;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar atat_1 = require(\"./atat\");\r\nvar common_1 = require(\"./common\");\r\nvar helpers_1 = require(\"./helpers\");\r\nvar regexp_1 = require(\"./regexp\");\r\nexports.tags = {\r\n    '@\\\\{': compileCode,\r\n    '@for\\\\s*\\\\(': compileFor,\r\n    '@function\\\\s+[$A-Za-z0-9]*\\\\s*\\\\(': compileFunction,\r\n    '@if\\\\s*\\\\(': compileIf,\r\n    '@section\\\\s+[$A-Za-z0-9]*\\\\s*\\\\{': compileSection,\r\n    '@while\\\\s*\\\\(': compileWhile,\r\n};\r\nfunction compileCode(inside, ctx, callback) {\r\n    callback(null, inside.value.trim());\r\n}\r\nfunction compileFor(inside, ctx, callback) {\r\n    var code = \"for(\" + inside.value + \"}\";\r\n    var blocks = regexp_1.matchRecursive(code, /\\{/g, /\\}/g);\r\n    var out = '';\r\n    out += blocks[0].value;\r\n    out += '{';\r\n    this.compile(blocks[1].value, ctx, function (err, res) {\r\n        if (err) {\r\n            return callback(err);\r\n        }\r\n        out += res;\r\n        out += '}';\r\n        callback(null, out);\r\n    });\r\n}\r\nfunction compileFunction(inside, ctx, callback) {\r\n    var left = inside.left.value.trim().substring(1);\r\n    callback(null, \"\" + left + inside.value.trim() + \"}\");\r\n}\r\nfunction compileIf(inside, ctx, callback) {\r\n    var _this = this;\r\n    var code = \"if(\" + inside.value + \"}\";\r\n    var blocks = regexp_1.matchRecursive(code, /\\{/g, /\\}/g);\r\n    helpers_1.loopAsync(blocks, function (block, i, array, loopCallback) {\r\n        if (block.name === common_1.VALUE_NAME_OUTSIDE) {\r\n            return loopCallback(null, block.value);\r\n        }\r\n        _this.compile(block.value, ctx, loopCallback);\r\n    }, function (err, results) {\r\n        if (err) {\r\n            return callback(err);\r\n        }\r\n        callback(null, results.join(''));\r\n    });\r\n}\r\nfunction compileSection(inside, ctx, callback) {\r\n    var block = inside.value.trim();\r\n    var value = inside.left.value.trim();\r\n    var regName = /^@section\\s+([A-Za-z0-9]+)\\s*\\{/g;\r\n    var match = regexp_1.regexpExec(value, regName);\r\n    if (!match || match.length > 2) {\r\n        return callback(new Error('Section parsing error'));\r\n    }\r\n    var name = match[1].trim();\r\n    if (ctx.sections[name]) {\r\n        return callback(new Error('Section already exists'));\r\n    }\r\n    atat_1.atat.parse(block, ctx.options, function (err, template) {\r\n        if (err) {\r\n            return callback(err);\r\n        }\r\n        template.context.parent = ctx;\r\n        ctx.sections[name] = template;\r\n        callback(null);\r\n    });\r\n}\r\nfunction compileWhile(inside, ctx, callback) {\r\n    var code = \"while(\" + inside.value + \"}\";\r\n    var blocks = regexp_1.matchRecursive(code, /\\{/g, /\\}/g);\r\n    var out = '';\r\n    out += blocks[0].value;\r\n    out += '{';\r\n    this.compile(blocks[1].value, ctx, function (err, res) {\r\n        if (err) {\r\n            return callback(err);\r\n        }\r\n        out += res;\r\n        out += '}';\r\n        callback(null, out);\r\n    });\r\n}\r\n"],"sourceRoot":""}